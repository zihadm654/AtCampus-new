/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `Research` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model Research
 *
 */
export type ResearchModel =
	runtime.Types.Result.DefaultSelection<Prisma.$ResearchPayload>;

export type AggregateResearch = {
	_count: ResearchCountAggregateOutputType | null;
	_min: ResearchMinAggregateOutputType | null;
	_max: ResearchMaxAggregateOutputType | null;
};

export type ResearchMinAggregateOutputType = {
	id: string | null;
	title: string | null;
	description: string | null;
	content: string | null;
	createdAt: Date | null;
	updatedAt: Date | null;
	userId: string | null;
};

export type ResearchMaxAggregateOutputType = {
	id: string | null;
	title: string | null;
	description: string | null;
	content: string | null;
	createdAt: Date | null;
	updatedAt: Date | null;
	userId: string | null;
};

export type ResearchCountAggregateOutputType = {
	id: number;
	title: number;
	description: number;
	content: number;
	createdAt: number;
	updatedAt: number;
	userId: number;
	_all: number;
};

export type ResearchMinAggregateInputType = {
	id?: true;
	title?: true;
	description?: true;
	content?: true;
	createdAt?: true;
	updatedAt?: true;
	userId?: true;
};

export type ResearchMaxAggregateInputType = {
	id?: true;
	title?: true;
	description?: true;
	content?: true;
	createdAt?: true;
	updatedAt?: true;
	userId?: true;
};

export type ResearchCountAggregateInputType = {
	id?: true;
	title?: true;
	description?: true;
	content?: true;
	createdAt?: true;
	updatedAt?: true;
	userId?: true;
	_all?: true;
};

export type ResearchAggregateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which Research to aggregate.
	 */
	where?: Prisma.ResearchWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Research to fetch.
	 */
	orderBy?:
		| Prisma.ResearchOrderByWithRelationInput
		| Prisma.ResearchOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the start position
	 */
	cursor?: Prisma.ResearchWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Research from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Research.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Count returned Research
	 **/
	_count?: true | ResearchCountAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the minimum value
	 **/
	_min?: ResearchMinAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the maximum value
	 **/
	_max?: ResearchMaxAggregateInputType;
};

export type GetResearchAggregateType<T extends ResearchAggregateArgs> = {
	[P in keyof T & keyof AggregateResearch]: P extends "_count" | "count"
		? T[P] extends true
			? number
			: Prisma.GetScalarType<T[P], AggregateResearch[P]>
		: Prisma.GetScalarType<T[P], AggregateResearch[P]>;
};

export type ResearchGroupByArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.ResearchWhereInput;
	orderBy?:
		| Prisma.ResearchOrderByWithAggregationInput
		| Prisma.ResearchOrderByWithAggregationInput[];
	by: Prisma.ResearchScalarFieldEnum[] | Prisma.ResearchScalarFieldEnum;
	having?: Prisma.ResearchScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
	_count?: ResearchCountAggregateInputType | true;
	_min?: ResearchMinAggregateInputType;
	_max?: ResearchMaxAggregateInputType;
};

export type ResearchGroupByOutputType = {
	id: string;
	title: string;
	description: string;
	content: string;
	createdAt: Date;
	updatedAt: Date;
	userId: string;
	_count: ResearchCountAggregateOutputType | null;
	_min: ResearchMinAggregateOutputType | null;
	_max: ResearchMaxAggregateOutputType | null;
};

type GetResearchGroupByPayload<T extends ResearchGroupByArgs> =
	Prisma.PrismaPromise<
		Array<
			Prisma.PickEnumerable<ResearchGroupByOutputType, T["by"]> & {
				[P in keyof T & keyof ResearchGroupByOutputType]: P extends "_count"
					? T[P] extends boolean
						? number
						: Prisma.GetScalarType<T[P], ResearchGroupByOutputType[P]>
					: Prisma.GetScalarType<T[P], ResearchGroupByOutputType[P]>;
			}
		>
	>;

export type ResearchWhereInput = {
	AND?: Prisma.ResearchWhereInput | Prisma.ResearchWhereInput[];
	OR?: Prisma.ResearchWhereInput[];
	NOT?: Prisma.ResearchWhereInput | Prisma.ResearchWhereInput[];
	id?: Prisma.StringFilter<"Research"> | string;
	title?: Prisma.StringFilter<"Research"> | string;
	description?: Prisma.StringFilter<"Research"> | string;
	content?: Prisma.StringFilter<"Research"> | string;
	createdAt?: Prisma.DateTimeFilter<"Research"> | Date | string;
	updatedAt?: Prisma.DateTimeFilter<"Research"> | Date | string;
	userId?: Prisma.StringFilter<"Research"> | string;
	user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
	comments?: Prisma.CommentListRelationFilter;
	likes?: Prisma.LikeListRelationFilter;
	linkedNotifications?: Prisma.NotificationListRelationFilter;
	attachments?: Prisma.MediaListRelationFilter;
	saveResearch?: Prisma.SaveResearchListRelationFilter;
	views?: Prisma.ContentViewListRelationFilter;
};

export type ResearchOrderByWithRelationInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
	user?: Prisma.UserOrderByWithRelationInput;
	comments?: Prisma.CommentOrderByRelationAggregateInput;
	likes?: Prisma.LikeOrderByRelationAggregateInput;
	linkedNotifications?: Prisma.NotificationOrderByRelationAggregateInput;
	attachments?: Prisma.MediaOrderByRelationAggregateInput;
	saveResearch?: Prisma.SaveResearchOrderByRelationAggregateInput;
	views?: Prisma.ContentViewOrderByRelationAggregateInput;
};

export type ResearchWhereUniqueInput = Prisma.AtLeast<
	{
		id?: string;
		AND?: Prisma.ResearchWhereInput | Prisma.ResearchWhereInput[];
		OR?: Prisma.ResearchWhereInput[];
		NOT?: Prisma.ResearchWhereInput | Prisma.ResearchWhereInput[];
		title?: Prisma.StringFilter<"Research"> | string;
		description?: Prisma.StringFilter<"Research"> | string;
		content?: Prisma.StringFilter<"Research"> | string;
		createdAt?: Prisma.DateTimeFilter<"Research"> | Date | string;
		updatedAt?: Prisma.DateTimeFilter<"Research"> | Date | string;
		userId?: Prisma.StringFilter<"Research"> | string;
		user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
		comments?: Prisma.CommentListRelationFilter;
		likes?: Prisma.LikeListRelationFilter;
		linkedNotifications?: Prisma.NotificationListRelationFilter;
		attachments?: Prisma.MediaListRelationFilter;
		saveResearch?: Prisma.SaveResearchListRelationFilter;
		views?: Prisma.ContentViewListRelationFilter;
	},
	"id"
>;

export type ResearchOrderByWithAggregationInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
	_count?: Prisma.ResearchCountOrderByAggregateInput;
	_max?: Prisma.ResearchMaxOrderByAggregateInput;
	_min?: Prisma.ResearchMinOrderByAggregateInput;
};

export type ResearchScalarWhereWithAggregatesInput = {
	AND?:
		| Prisma.ResearchScalarWhereWithAggregatesInput
		| Prisma.ResearchScalarWhereWithAggregatesInput[];
	OR?: Prisma.ResearchScalarWhereWithAggregatesInput[];
	NOT?:
		| Prisma.ResearchScalarWhereWithAggregatesInput
		| Prisma.ResearchScalarWhereWithAggregatesInput[];
	id?: Prisma.StringWithAggregatesFilter<"Research"> | string;
	title?: Prisma.StringWithAggregatesFilter<"Research"> | string;
	description?: Prisma.StringWithAggregatesFilter<"Research"> | string;
	content?: Prisma.StringWithAggregatesFilter<"Research"> | string;
	createdAt?: Prisma.DateTimeWithAggregatesFilter<"Research"> | Date | string;
	updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Research"> | Date | string;
	userId?: Prisma.StringWithAggregatesFilter<"Research"> | string;
};

export type ResearchCreateInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutResearchInput;
	comments?: Prisma.CommentCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
	comments?: Prisma.CommentUncheckedCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeUncheckedCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaUncheckedCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchUncheckedCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchUpdateInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutResearchNestedInput;
	comments?: Prisma.CommentUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	comments?: Prisma.CommentUncheckedUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUncheckedUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUncheckedUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUncheckedUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUncheckedUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchCreateManyInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
};

export type ResearchUpdateManyMutationInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type ResearchUncheckedUpdateManyInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
};

export type ResearchListRelationFilter = {
	every?: Prisma.ResearchWhereInput;
	some?: Prisma.ResearchWhereInput;
	none?: Prisma.ResearchWhereInput;
};

export type ResearchOrderByRelationAggregateInput = {
	_count?: Prisma.SortOrder;
};

export type ResearchNullableScalarRelationFilter = {
	is?: Prisma.ResearchWhereInput | null;
	isNot?: Prisma.ResearchWhereInput | null;
};

export type ResearchCountOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
};

export type ResearchMaxOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
};

export type ResearchMinOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	description?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
};

export type ResearchScalarRelationFilter = {
	is?: Prisma.ResearchWhereInput;
	isNot?: Prisma.ResearchWhereInput;
};

export type ResearchCreateNestedManyWithoutUserInput = {
	create?:
		| Prisma.XOR<
				Prisma.ResearchCreateWithoutUserInput,
				Prisma.ResearchUncheckedCreateWithoutUserInput
		  >
		| Prisma.ResearchCreateWithoutUserInput[]
		| Prisma.ResearchUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.ResearchCreateOrConnectWithoutUserInput
		| Prisma.ResearchCreateOrConnectWithoutUserInput[];
	createMany?: Prisma.ResearchCreateManyUserInputEnvelope;
	connect?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
};

export type ResearchUncheckedCreateNestedManyWithoutUserInput = {
	create?:
		| Prisma.XOR<
				Prisma.ResearchCreateWithoutUserInput,
				Prisma.ResearchUncheckedCreateWithoutUserInput
		  >
		| Prisma.ResearchCreateWithoutUserInput[]
		| Prisma.ResearchUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.ResearchCreateOrConnectWithoutUserInput
		| Prisma.ResearchCreateOrConnectWithoutUserInput[];
	createMany?: Prisma.ResearchCreateManyUserInputEnvelope;
	connect?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
};

export type ResearchUpdateManyWithoutUserNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.ResearchCreateWithoutUserInput,
				Prisma.ResearchUncheckedCreateWithoutUserInput
		  >
		| Prisma.ResearchCreateWithoutUserInput[]
		| Prisma.ResearchUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.ResearchCreateOrConnectWithoutUserInput
		| Prisma.ResearchCreateOrConnectWithoutUserInput[];
	upsert?:
		| Prisma.ResearchUpsertWithWhereUniqueWithoutUserInput
		| Prisma.ResearchUpsertWithWhereUniqueWithoutUserInput[];
	createMany?: Prisma.ResearchCreateManyUserInputEnvelope;
	set?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
	disconnect?:
		| Prisma.ResearchWhereUniqueInput
		| Prisma.ResearchWhereUniqueInput[];
	delete?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
	connect?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
	update?:
		| Prisma.ResearchUpdateWithWhereUniqueWithoutUserInput
		| Prisma.ResearchUpdateWithWhereUniqueWithoutUserInput[];
	updateMany?:
		| Prisma.ResearchUpdateManyWithWhereWithoutUserInput
		| Prisma.ResearchUpdateManyWithWhereWithoutUserInput[];
	deleteMany?:
		| Prisma.ResearchScalarWhereInput
		| Prisma.ResearchScalarWhereInput[];
};

export type ResearchUncheckedUpdateManyWithoutUserNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.ResearchCreateWithoutUserInput,
				Prisma.ResearchUncheckedCreateWithoutUserInput
		  >
		| Prisma.ResearchCreateWithoutUserInput[]
		| Prisma.ResearchUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.ResearchCreateOrConnectWithoutUserInput
		| Prisma.ResearchCreateOrConnectWithoutUserInput[];
	upsert?:
		| Prisma.ResearchUpsertWithWhereUniqueWithoutUserInput
		| Prisma.ResearchUpsertWithWhereUniqueWithoutUserInput[];
	createMany?: Prisma.ResearchCreateManyUserInputEnvelope;
	set?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
	disconnect?:
		| Prisma.ResearchWhereUniqueInput
		| Prisma.ResearchWhereUniqueInput[];
	delete?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
	connect?: Prisma.ResearchWhereUniqueInput | Prisma.ResearchWhereUniqueInput[];
	update?:
		| Prisma.ResearchUpdateWithWhereUniqueWithoutUserInput
		| Prisma.ResearchUpdateWithWhereUniqueWithoutUserInput[];
	updateMany?:
		| Prisma.ResearchUpdateManyWithWhereWithoutUserInput
		| Prisma.ResearchUpdateManyWithWhereWithoutUserInput[];
	deleteMany?:
		| Prisma.ResearchScalarWhereInput
		| Prisma.ResearchScalarWhereInput[];
};

export type ResearchCreateNestedOneWithoutAttachmentsInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutAttachmentsInput,
		Prisma.ResearchUncheckedCreateWithoutAttachmentsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutAttachmentsInput;
	connect?: Prisma.ResearchWhereUniqueInput;
};

export type ResearchUpdateOneWithoutAttachmentsNestedInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutAttachmentsInput,
		Prisma.ResearchUncheckedCreateWithoutAttachmentsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutAttachmentsInput;
	upsert?: Prisma.ResearchUpsertWithoutAttachmentsInput;
	disconnect?: boolean;
	delete?: Prisma.ResearchWhereInput | boolean;
	connect?: Prisma.ResearchWhereUniqueInput;
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.ResearchUpdateToOneWithWhereWithoutAttachmentsInput,
			Prisma.ResearchUpdateWithoutAttachmentsInput
		>,
		Prisma.ResearchUncheckedUpdateWithoutAttachmentsInput
	>;
};

export type ResearchCreateNestedOneWithoutCommentsInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutCommentsInput,
		Prisma.ResearchUncheckedCreateWithoutCommentsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutCommentsInput;
	connect?: Prisma.ResearchWhereUniqueInput;
};

export type ResearchUpdateOneWithoutCommentsNestedInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutCommentsInput,
		Prisma.ResearchUncheckedCreateWithoutCommentsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutCommentsInput;
	upsert?: Prisma.ResearchUpsertWithoutCommentsInput;
	disconnect?: boolean;
	delete?: Prisma.ResearchWhereInput | boolean;
	connect?: Prisma.ResearchWhereUniqueInput;
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.ResearchUpdateToOneWithWhereWithoutCommentsInput,
			Prisma.ResearchUpdateWithoutCommentsInput
		>,
		Prisma.ResearchUncheckedUpdateWithoutCommentsInput
	>;
};

export type ResearchCreateNestedOneWithoutLikesInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutLikesInput,
		Prisma.ResearchUncheckedCreateWithoutLikesInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutLikesInput;
	connect?: Prisma.ResearchWhereUniqueInput;
};

export type ResearchUpdateOneWithoutLikesNestedInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutLikesInput,
		Prisma.ResearchUncheckedCreateWithoutLikesInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutLikesInput;
	upsert?: Prisma.ResearchUpsertWithoutLikesInput;
	disconnect?: boolean;
	delete?: Prisma.ResearchWhereInput | boolean;
	connect?: Prisma.ResearchWhereUniqueInput;
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.ResearchUpdateToOneWithWhereWithoutLikesInput,
			Prisma.ResearchUpdateWithoutLikesInput
		>,
		Prisma.ResearchUncheckedUpdateWithoutLikesInput
	>;
};

export type ResearchCreateNestedOneWithoutLinkedNotificationsInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutLinkedNotificationsInput,
		Prisma.ResearchUncheckedCreateWithoutLinkedNotificationsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutLinkedNotificationsInput;
	connect?: Prisma.ResearchWhereUniqueInput;
};

export type ResearchUpdateOneWithoutLinkedNotificationsNestedInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutLinkedNotificationsInput,
		Prisma.ResearchUncheckedCreateWithoutLinkedNotificationsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutLinkedNotificationsInput;
	upsert?: Prisma.ResearchUpsertWithoutLinkedNotificationsInput;
	disconnect?: boolean;
	delete?: Prisma.ResearchWhereInput | boolean;
	connect?: Prisma.ResearchWhereUniqueInput;
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.ResearchUpdateToOneWithWhereWithoutLinkedNotificationsInput,
			Prisma.ResearchUpdateWithoutLinkedNotificationsInput
		>,
		Prisma.ResearchUncheckedUpdateWithoutLinkedNotificationsInput
	>;
};

export type ResearchCreateNestedOneWithoutViewsInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutViewsInput,
		Prisma.ResearchUncheckedCreateWithoutViewsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutViewsInput;
	connect?: Prisma.ResearchWhereUniqueInput;
};

export type ResearchUpdateOneWithoutViewsNestedInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutViewsInput,
		Prisma.ResearchUncheckedCreateWithoutViewsInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutViewsInput;
	upsert?: Prisma.ResearchUpsertWithoutViewsInput;
	disconnect?: boolean;
	delete?: Prisma.ResearchWhereInput | boolean;
	connect?: Prisma.ResearchWhereUniqueInput;
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.ResearchUpdateToOneWithWhereWithoutViewsInput,
			Prisma.ResearchUpdateWithoutViewsInput
		>,
		Prisma.ResearchUncheckedUpdateWithoutViewsInput
	>;
};

export type ResearchCreateNestedOneWithoutSaveResearchInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutSaveResearchInput,
		Prisma.ResearchUncheckedCreateWithoutSaveResearchInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutSaveResearchInput;
	connect?: Prisma.ResearchWhereUniqueInput;
};

export type ResearchUpdateOneRequiredWithoutSaveResearchNestedInput = {
	create?: Prisma.XOR<
		Prisma.ResearchCreateWithoutSaveResearchInput,
		Prisma.ResearchUncheckedCreateWithoutSaveResearchInput
	>;
	connectOrCreate?: Prisma.ResearchCreateOrConnectWithoutSaveResearchInput;
	upsert?: Prisma.ResearchUpsertWithoutSaveResearchInput;
	connect?: Prisma.ResearchWhereUniqueInput;
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.ResearchUpdateToOneWithWhereWithoutSaveResearchInput,
			Prisma.ResearchUpdateWithoutSaveResearchInput
		>,
		Prisma.ResearchUncheckedUpdateWithoutSaveResearchInput
	>;
};

export type ResearchCreateWithoutUserInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	comments?: Prisma.CommentCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateWithoutUserInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	comments?: Prisma.CommentUncheckedCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeUncheckedCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaUncheckedCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchUncheckedCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchCreateOrConnectWithoutUserInput = {
	where: Prisma.ResearchWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutUserInput,
		Prisma.ResearchUncheckedCreateWithoutUserInput
	>;
};

export type ResearchCreateManyUserInputEnvelope = {
	data:
		| Prisma.ResearchCreateManyUserInput
		| Prisma.ResearchCreateManyUserInput[];
};

export type ResearchUpsertWithWhereUniqueWithoutUserInput = {
	where: Prisma.ResearchWhereUniqueInput;
	update: Prisma.XOR<
		Prisma.ResearchUpdateWithoutUserInput,
		Prisma.ResearchUncheckedUpdateWithoutUserInput
	>;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutUserInput,
		Prisma.ResearchUncheckedCreateWithoutUserInput
	>;
};

export type ResearchUpdateWithWhereUniqueWithoutUserInput = {
	where: Prisma.ResearchWhereUniqueInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateWithoutUserInput,
		Prisma.ResearchUncheckedUpdateWithoutUserInput
	>;
};

export type ResearchUpdateManyWithWhereWithoutUserInput = {
	where: Prisma.ResearchScalarWhereInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateManyMutationInput,
		Prisma.ResearchUncheckedUpdateManyWithoutUserInput
	>;
};

export type ResearchScalarWhereInput = {
	AND?: Prisma.ResearchScalarWhereInput | Prisma.ResearchScalarWhereInput[];
	OR?: Prisma.ResearchScalarWhereInput[];
	NOT?: Prisma.ResearchScalarWhereInput | Prisma.ResearchScalarWhereInput[];
	id?: Prisma.StringFilter<"Research"> | string;
	title?: Prisma.StringFilter<"Research"> | string;
	description?: Prisma.StringFilter<"Research"> | string;
	content?: Prisma.StringFilter<"Research"> | string;
	createdAt?: Prisma.DateTimeFilter<"Research"> | Date | string;
	updatedAt?: Prisma.DateTimeFilter<"Research"> | Date | string;
	userId?: Prisma.StringFilter<"Research"> | string;
};

export type ResearchCreateWithoutAttachmentsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutResearchInput;
	comments?: Prisma.CommentCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateWithoutAttachmentsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
	comments?: Prisma.CommentUncheckedCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeUncheckedCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchUncheckedCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchCreateOrConnectWithoutAttachmentsInput = {
	where: Prisma.ResearchWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutAttachmentsInput,
		Prisma.ResearchUncheckedCreateWithoutAttachmentsInput
	>;
};

export type ResearchUpsertWithoutAttachmentsInput = {
	update: Prisma.XOR<
		Prisma.ResearchUpdateWithoutAttachmentsInput,
		Prisma.ResearchUncheckedUpdateWithoutAttachmentsInput
	>;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutAttachmentsInput,
		Prisma.ResearchUncheckedCreateWithoutAttachmentsInput
	>;
	where?: Prisma.ResearchWhereInput;
};

export type ResearchUpdateToOneWithWhereWithoutAttachmentsInput = {
	where?: Prisma.ResearchWhereInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateWithoutAttachmentsInput,
		Prisma.ResearchUncheckedUpdateWithoutAttachmentsInput
	>;
};

export type ResearchUpdateWithoutAttachmentsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutResearchNestedInput;
	comments?: Prisma.CommentUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateWithoutAttachmentsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	comments?: Prisma.CommentUncheckedUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUncheckedUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUncheckedUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUncheckedUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchCreateWithoutCommentsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutResearchInput;
	likes?: Prisma.LikeCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateWithoutCommentsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
	likes?: Prisma.LikeUncheckedCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaUncheckedCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchUncheckedCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchCreateOrConnectWithoutCommentsInput = {
	where: Prisma.ResearchWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutCommentsInput,
		Prisma.ResearchUncheckedCreateWithoutCommentsInput
	>;
};

export type ResearchUpsertWithoutCommentsInput = {
	update: Prisma.XOR<
		Prisma.ResearchUpdateWithoutCommentsInput,
		Prisma.ResearchUncheckedUpdateWithoutCommentsInput
	>;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutCommentsInput,
		Prisma.ResearchUncheckedCreateWithoutCommentsInput
	>;
	where?: Prisma.ResearchWhereInput;
};

export type ResearchUpdateToOneWithWhereWithoutCommentsInput = {
	where?: Prisma.ResearchWhereInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateWithoutCommentsInput,
		Prisma.ResearchUncheckedUpdateWithoutCommentsInput
	>;
};

export type ResearchUpdateWithoutCommentsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutResearchNestedInput;
	likes?: Prisma.LikeUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateWithoutCommentsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	likes?: Prisma.LikeUncheckedUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUncheckedUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUncheckedUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUncheckedUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchCreateWithoutLikesInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutResearchInput;
	comments?: Prisma.CommentCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateWithoutLikesInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
	comments?: Prisma.CommentUncheckedCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaUncheckedCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchUncheckedCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchCreateOrConnectWithoutLikesInput = {
	where: Prisma.ResearchWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutLikesInput,
		Prisma.ResearchUncheckedCreateWithoutLikesInput
	>;
};

export type ResearchUpsertWithoutLikesInput = {
	update: Prisma.XOR<
		Prisma.ResearchUpdateWithoutLikesInput,
		Prisma.ResearchUncheckedUpdateWithoutLikesInput
	>;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutLikesInput,
		Prisma.ResearchUncheckedCreateWithoutLikesInput
	>;
	where?: Prisma.ResearchWhereInput;
};

export type ResearchUpdateToOneWithWhereWithoutLikesInput = {
	where?: Prisma.ResearchWhereInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateWithoutLikesInput,
		Prisma.ResearchUncheckedUpdateWithoutLikesInput
	>;
};

export type ResearchUpdateWithoutLikesInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutResearchNestedInput;
	comments?: Prisma.CommentUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateWithoutLikesInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	comments?: Prisma.CommentUncheckedUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUncheckedUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUncheckedUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUncheckedUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchCreateWithoutLinkedNotificationsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutResearchInput;
	comments?: Prisma.CommentCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateWithoutLinkedNotificationsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
	comments?: Prisma.CommentUncheckedCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeUncheckedCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaUncheckedCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchUncheckedCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchCreateOrConnectWithoutLinkedNotificationsInput = {
	where: Prisma.ResearchWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutLinkedNotificationsInput,
		Prisma.ResearchUncheckedCreateWithoutLinkedNotificationsInput
	>;
};

export type ResearchUpsertWithoutLinkedNotificationsInput = {
	update: Prisma.XOR<
		Prisma.ResearchUpdateWithoutLinkedNotificationsInput,
		Prisma.ResearchUncheckedUpdateWithoutLinkedNotificationsInput
	>;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutLinkedNotificationsInput,
		Prisma.ResearchUncheckedCreateWithoutLinkedNotificationsInput
	>;
	where?: Prisma.ResearchWhereInput;
};

export type ResearchUpdateToOneWithWhereWithoutLinkedNotificationsInput = {
	where?: Prisma.ResearchWhereInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateWithoutLinkedNotificationsInput,
		Prisma.ResearchUncheckedUpdateWithoutLinkedNotificationsInput
	>;
};

export type ResearchUpdateWithoutLinkedNotificationsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutResearchNestedInput;
	comments?: Prisma.CommentUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateWithoutLinkedNotificationsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	comments?: Prisma.CommentUncheckedUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUncheckedUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUncheckedUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUncheckedUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchCreateWithoutViewsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutResearchInput;
	comments?: Prisma.CommentCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateWithoutViewsInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
	comments?: Prisma.CommentUncheckedCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeUncheckedCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaUncheckedCreateNestedManyWithoutResearchInput;
	saveResearch?: Prisma.SaveResearchUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchCreateOrConnectWithoutViewsInput = {
	where: Prisma.ResearchWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutViewsInput,
		Prisma.ResearchUncheckedCreateWithoutViewsInput
	>;
};

export type ResearchUpsertWithoutViewsInput = {
	update: Prisma.XOR<
		Prisma.ResearchUpdateWithoutViewsInput,
		Prisma.ResearchUncheckedUpdateWithoutViewsInput
	>;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutViewsInput,
		Prisma.ResearchUncheckedCreateWithoutViewsInput
	>;
	where?: Prisma.ResearchWhereInput;
};

export type ResearchUpdateToOneWithWhereWithoutViewsInput = {
	where?: Prisma.ResearchWhereInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateWithoutViewsInput,
		Prisma.ResearchUncheckedUpdateWithoutViewsInput
	>;
};

export type ResearchUpdateWithoutViewsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutResearchNestedInput;
	comments?: Prisma.CommentUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateWithoutViewsInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	comments?: Prisma.CommentUncheckedUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUncheckedUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUncheckedUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUncheckedUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchCreateWithoutSaveResearchInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutResearchInput;
	comments?: Prisma.CommentCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewCreateNestedManyWithoutResearchInput;
};

export type ResearchUncheckedCreateWithoutSaveResearchInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	userId: string;
	comments?: Prisma.CommentUncheckedCreateNestedManyWithoutResearchInput;
	likes?: Prisma.LikeUncheckedCreateNestedManyWithoutResearchInput;
	linkedNotifications?: Prisma.NotificationUncheckedCreateNestedManyWithoutResearchInput;
	attachments?: Prisma.MediaUncheckedCreateNestedManyWithoutResearchInput;
	views?: Prisma.ContentViewUncheckedCreateNestedManyWithoutResearchInput;
};

export type ResearchCreateOrConnectWithoutSaveResearchInput = {
	where: Prisma.ResearchWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutSaveResearchInput,
		Prisma.ResearchUncheckedCreateWithoutSaveResearchInput
	>;
};

export type ResearchUpsertWithoutSaveResearchInput = {
	update: Prisma.XOR<
		Prisma.ResearchUpdateWithoutSaveResearchInput,
		Prisma.ResearchUncheckedUpdateWithoutSaveResearchInput
	>;
	create: Prisma.XOR<
		Prisma.ResearchCreateWithoutSaveResearchInput,
		Prisma.ResearchUncheckedCreateWithoutSaveResearchInput
	>;
	where?: Prisma.ResearchWhereInput;
};

export type ResearchUpdateToOneWithWhereWithoutSaveResearchInput = {
	where?: Prisma.ResearchWhereInput;
	data: Prisma.XOR<
		Prisma.ResearchUpdateWithoutSaveResearchInput,
		Prisma.ResearchUncheckedUpdateWithoutSaveResearchInput
	>;
};

export type ResearchUpdateWithoutSaveResearchInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutResearchNestedInput;
	comments?: Prisma.CommentUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateWithoutSaveResearchInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	comments?: Prisma.CommentUncheckedUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUncheckedUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUncheckedUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUncheckedUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchCreateManyUserInput = {
	id?: string;
	title: string;
	description: string;
	content: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type ResearchUpdateWithoutUserInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	comments?: Prisma.CommentUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateWithoutUserInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	comments?: Prisma.CommentUncheckedUpdateManyWithoutResearchNestedInput;
	likes?: Prisma.LikeUncheckedUpdateManyWithoutResearchNestedInput;
	linkedNotifications?: Prisma.NotificationUncheckedUpdateManyWithoutResearchNestedInput;
	attachments?: Prisma.MediaUncheckedUpdateManyWithoutResearchNestedInput;
	saveResearch?: Prisma.SaveResearchUncheckedUpdateManyWithoutResearchNestedInput;
	views?: Prisma.ContentViewUncheckedUpdateManyWithoutResearchNestedInput;
};

export type ResearchUncheckedUpdateManyWithoutUserInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	description?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type ResearchCountOutputType
 */

export type ResearchCountOutputType = {
	comments: number;
	likes: number;
	linkedNotifications: number;
	attachments: number;
	saveResearch: number;
	views: number;
};

export type ResearchCountOutputTypeSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	comments?: boolean | ResearchCountOutputTypeCountCommentsArgs;
	likes?: boolean | ResearchCountOutputTypeCountLikesArgs;
	linkedNotifications?:
		| boolean
		| ResearchCountOutputTypeCountLinkedNotificationsArgs;
	attachments?: boolean | ResearchCountOutputTypeCountAttachmentsArgs;
	saveResearch?: boolean | ResearchCountOutputTypeCountSaveResearchArgs;
	views?: boolean | ResearchCountOutputTypeCountViewsArgs;
};

/**
 * ResearchCountOutputType without action
 */
export type ResearchCountOutputTypeDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ResearchCountOutputType
	 */
	select?: Prisma.ResearchCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * ResearchCountOutputType without action
 */
export type ResearchCountOutputTypeCountCommentsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.CommentWhereInput;
};

/**
 * ResearchCountOutputType without action
 */
export type ResearchCountOutputTypeCountLikesArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.LikeWhereInput;
};

/**
 * ResearchCountOutputType without action
 */
export type ResearchCountOutputTypeCountLinkedNotificationsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.NotificationWhereInput;
};

/**
 * ResearchCountOutputType without action
 */
export type ResearchCountOutputTypeCountAttachmentsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.MediaWhereInput;
};

/**
 * ResearchCountOutputType without action
 */
export type ResearchCountOutputTypeCountSaveResearchArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.SaveResearchWhereInput;
};

/**
 * ResearchCountOutputType without action
 */
export type ResearchCountOutputTypeCountViewsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.ContentViewWhereInput;
};

export type ResearchSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		title?: boolean;
		description?: boolean;
		content?: boolean;
		createdAt?: boolean;
		updatedAt?: boolean;
		userId?: boolean;
		user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
		comments?: boolean | Prisma.Research$commentsArgs<ExtArgs>;
		likes?: boolean | Prisma.Research$likesArgs<ExtArgs>;
		linkedNotifications?:
			| boolean
			| Prisma.Research$linkedNotificationsArgs<ExtArgs>;
		attachments?: boolean | Prisma.Research$attachmentsArgs<ExtArgs>;
		saveResearch?: boolean | Prisma.Research$saveResearchArgs<ExtArgs>;
		views?: boolean | Prisma.Research$viewsArgs<ExtArgs>;
		_count?: boolean | Prisma.ResearchCountOutputTypeDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["research"]
>;

export type ResearchSelectScalar = {
	id?: boolean;
	title?: boolean;
	description?: boolean;
	content?: boolean;
	createdAt?: boolean;
	updatedAt?: boolean;
	userId?: boolean;
};

export type ResearchOmit<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
	| "id"
	| "title"
	| "description"
	| "content"
	| "createdAt"
	| "updatedAt"
	| "userId",
	ExtArgs["result"]["research"]
>;
export type ResearchInclude<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
	comments?: boolean | Prisma.Research$commentsArgs<ExtArgs>;
	likes?: boolean | Prisma.Research$likesArgs<ExtArgs>;
	linkedNotifications?:
		| boolean
		| Prisma.Research$linkedNotificationsArgs<ExtArgs>;
	attachments?: boolean | Prisma.Research$attachmentsArgs<ExtArgs>;
	saveResearch?: boolean | Prisma.Research$saveResearchArgs<ExtArgs>;
	views?: boolean | Prisma.Research$viewsArgs<ExtArgs>;
	_count?: boolean | Prisma.ResearchCountOutputTypeDefaultArgs<ExtArgs>;
};

export type $ResearchPayload<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	name: "Research";
	objects: {
		user: Prisma.$UserPayload<ExtArgs>;
		comments: Prisma.$CommentPayload<ExtArgs>[];
		likes: Prisma.$LikePayload<ExtArgs>[];
		linkedNotifications: Prisma.$NotificationPayload<ExtArgs>[];
		attachments: Prisma.$MediaPayload<ExtArgs>[];
		saveResearch: Prisma.$SaveResearchPayload<ExtArgs>[];
		views: Prisma.$ContentViewPayload<ExtArgs>[];
	};
	scalars: runtime.Types.Extensions.GetPayloadResult<
		{
			id: string;
			title: string;
			description: string;
			content: string;
			createdAt: Date;
			updatedAt: Date;
			userId: string;
		},
		ExtArgs["result"]["research"]
	>;
	composites: {};
};

export type ResearchGetPayload<
	S extends boolean | null | undefined | ResearchDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$ResearchPayload, S>;

export type ResearchCountArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<ResearchFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
	select?: ResearchCountAggregateInputType | true;
};

export interface ResearchDelegate<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> {
	[K: symbol]: {
		types: Prisma.TypeMap<ExtArgs>["model"]["Research"];
		meta: { name: "Research" };
	};
	/**
	 * Find zero or one Research that matches the filter.
	 * @param {ResearchFindUniqueArgs} args - Arguments to find a Research
	 * @example
	 * // Get one Research
	 * const research = await prisma.research.findUnique({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUnique<T extends ResearchFindUniqueArgs>(
		args: Prisma.SelectSubset<T, ResearchFindUniqueArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"findUnique",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find one Research that matches the filter or throw an error with `error.code='P2025'`
	 * if no matches were found.
	 * @param {ResearchFindUniqueOrThrowArgs} args - Arguments to find a Research
	 * @example
	 * // Get one Research
	 * const research = await prisma.research.findUniqueOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUniqueOrThrow<T extends ResearchFindUniqueOrThrowArgs>(
		args: Prisma.SelectSubset<T, ResearchFindUniqueOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"findUniqueOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first Research that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ResearchFindFirstArgs} args - Arguments to find a Research
	 * @example
	 * // Get one Research
	 * const research = await prisma.research.findFirst({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirst<T extends ResearchFindFirstArgs>(
		args?: Prisma.SelectSubset<T, ResearchFindFirstArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"findFirst",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first Research that matches the filter or
	 * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ResearchFindFirstOrThrowArgs} args - Arguments to find a Research
	 * @example
	 * // Get one Research
	 * const research = await prisma.research.findFirstOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirstOrThrow<T extends ResearchFindFirstOrThrowArgs>(
		args?: Prisma.SelectSubset<T, ResearchFindFirstOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"findFirstOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more Research that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ResearchFindManyArgs} args - Arguments to filter and select certain fields only.
	 * @example
	 * // Get all Research
	 * const research = await prisma.research.findMany()
	 *
	 * // Get first 10 Research
	 * const research = await prisma.research.findMany({ take: 10 })
	 *
	 * // Only select the `id`
	 * const researchWithIdOnly = await prisma.research.findMany({ select: { id: true } })
	 *
	 */
	findMany<T extends ResearchFindManyArgs>(
		args?: Prisma.SelectSubset<T, ResearchFindManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"findMany",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create a Research.
	 * @param {ResearchCreateArgs} args - Arguments to create a Research.
	 * @example
	 * // Create one Research
	 * const Research = await prisma.research.create({
	 *   data: {
	 *     // ... data to create a Research
	 *   }
	 * })
	 *
	 */
	create<T extends ResearchCreateArgs>(
		args: Prisma.SelectSubset<T, ResearchCreateArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"create",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Create many Research.
	 * @param {ResearchCreateManyArgs} args - Arguments to create many Research.
	 * @example
	 * // Create many Research
	 * const research = await prisma.research.createMany({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 */
	createMany<T extends ResearchCreateManyArgs>(
		args?: Prisma.SelectSubset<T, ResearchCreateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Delete a Research.
	 * @param {ResearchDeleteArgs} args - Arguments to delete one Research.
	 * @example
	 * // Delete one Research
	 * const Research = await prisma.research.delete({
	 *   where: {
	 *     // ... filter to delete one Research
	 *   }
	 * })
	 *
	 */
	delete<T extends ResearchDeleteArgs>(
		args: Prisma.SelectSubset<T, ResearchDeleteArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"delete",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Update one Research.
	 * @param {ResearchUpdateArgs} args - Arguments to update one Research.
	 * @example
	 * // Update one Research
	 * const research = await prisma.research.update({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	update<T extends ResearchUpdateArgs>(
		args: Prisma.SelectSubset<T, ResearchUpdateArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"update",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Delete zero or more Research.
	 * @param {ResearchDeleteManyArgs} args - Arguments to filter Research to delete.
	 * @example
	 * // Delete a few Research
	 * const { count } = await prisma.research.deleteMany({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 *
	 */
	deleteMany<T extends ResearchDeleteManyArgs>(
		args?: Prisma.SelectSubset<T, ResearchDeleteManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more Research.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ResearchUpdateManyArgs} args - Arguments to update one or more rows.
	 * @example
	 * // Update many Research
	 * const research = await prisma.research.updateMany({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	updateMany<T extends ResearchUpdateManyArgs>(
		args: Prisma.SelectSubset<T, ResearchUpdateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Create or update one Research.
	 * @param {ResearchUpsertArgs} args - Arguments to update or create a Research.
	 * @example
	 * // Update or create a Research
	 * const research = await prisma.research.upsert({
	 *   create: {
	 *     // ... data to create a Research
	 *   },
	 *   update: {
	 *     // ... in case it already exists, update
	 *   },
	 *   where: {
	 *     // ... the filter for the Research we want to update
	 *   }
	 * })
	 */
	upsert<T extends ResearchUpsertArgs>(
		args: Prisma.SelectSubset<T, ResearchUpsertArgs<ExtArgs>>,
	): Prisma.Prisma__ResearchClient<
		runtime.Types.Result.GetResult<
			Prisma.$ResearchPayload<ExtArgs>,
			T,
			"upsert",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more Research that matches the filter.
	 * @param {ResearchFindRawArgs} args - Select which filters you would like to apply.
	 * @example
	 * const research = await prisma.research.findRaw({
	 *   filter: { age: { $gt: 25 } }
	 * })
	 */
	findRaw(
		args?: Prisma.ResearchFindRawArgs,
	): Prisma.PrismaPromise<Prisma.JsonObject>;

	/**
	 * Perform aggregation operations on a Research.
	 * @param {ResearchAggregateRawArgs} args - Select which aggregations you would like to apply.
	 * @example
	 * const research = await prisma.research.aggregateRaw({
	 *   pipeline: [
	 *     { $match: { status: "registered" } },
	 *     { $group: { _id: "$country", total: { $sum: 1 } } }
	 *   ]
	 * })
	 */
	aggregateRaw(
		args?: Prisma.ResearchAggregateRawArgs,
	): Prisma.PrismaPromise<Prisma.JsonObject>;

	/**
	 * Count the number of Research.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ResearchCountArgs} args - Arguments to filter Research to count.
	 * @example
	 * // Count the number of Research
	 * const count = await prisma.research.count({
	 *   where: {
	 *     // ... the filter for the Research we want to count
	 *   }
	 * })
	 **/
	count<T extends ResearchCountArgs>(
		args?: Prisma.Subset<T, ResearchCountArgs>,
	): Prisma.PrismaPromise<
		T extends runtime.Types.Utils.Record<"select", any>
			? T["select"] extends true
				? number
				: Prisma.GetScalarType<T["select"], ResearchCountAggregateOutputType>
			: number
	>;

	/**
	 * Allows you to perform aggregations operations on a Research.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ResearchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
	 * @example
	 * // Ordered by age ascending
	 * // Where email contains prisma.io
	 * // Limited to the 10 users
	 * const aggregations = await prisma.user.aggregate({
	 *   _avg: {
	 *     age: true,
	 *   },
	 *   where: {
	 *     email: {
	 *       contains: "prisma.io",
	 *     },
	 *   },
	 *   orderBy: {
	 *     age: "asc",
	 *   },
	 *   take: 10,
	 * })
	 **/
	aggregate<T extends ResearchAggregateArgs>(
		args: Prisma.Subset<T, ResearchAggregateArgs>,
	): Prisma.PrismaPromise<GetResearchAggregateType<T>>;

	/**
	 * Group by Research.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {ResearchGroupByArgs} args - Group by arguments.
	 * @example
	 * // Group by city, order by createdAt, get count
	 * const result = await prisma.user.groupBy({
	 *   by: ['city', 'createdAt'],
	 *   orderBy: {
	 *     createdAt: true
	 *   },
	 *   _count: {
	 *     _all: true
	 *   },
	 * })
	 *
	 **/
	groupBy<
		T extends ResearchGroupByArgs,
		HasSelectOrTake extends Prisma.Or<
			Prisma.Extends<"skip", Prisma.Keys<T>>,
			Prisma.Extends<"take", Prisma.Keys<T>>
		>,
		OrderByArg extends Prisma.True extends HasSelectOrTake
			? { orderBy: ResearchGroupByArgs["orderBy"] }
			: { orderBy?: ResearchGroupByArgs["orderBy"] },
		OrderFields extends Prisma.ExcludeUnderscoreKeys<
			Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
		>,
		ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
		ByValid extends Prisma.Has<ByFields, OrderFields>,
		HavingFields extends Prisma.GetHavingFields<T["having"]>,
		HavingValid extends Prisma.Has<ByFields, HavingFields>,
		ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
		InputErrors extends ByEmpty extends Prisma.True
			? `Error: "by" must not be empty.`
			: HavingValid extends Prisma.False
				? {
						[P in HavingFields]: P extends ByFields
							? never
							: P extends string
								? `Error: Field "${P}" used in "having" needs to be provided in "by".`
								: [
										Error,
										"Field ",
										P,
										` in "having" needs to be provided in "by"`,
									];
					}[HavingFields]
				: "take" extends Prisma.Keys<T>
					? "orderBy" extends Prisma.Keys<T>
						? ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields]
						: 'Error: If you provide "take", you also need to provide "orderBy"'
					: "skip" extends Prisma.Keys<T>
						? "orderBy" extends Prisma.Keys<T>
							? ByValid extends Prisma.True
								? {}
								: {
										[P in OrderFields]: P extends ByFields
											? never
											: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
									}[OrderFields]
							: 'Error: If you provide "skip", you also need to provide "orderBy"'
						: ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields],
	>(
		args: Prisma.SubsetIntersection<T, ResearchGroupByArgs, OrderByArg> &
			InputErrors,
	): {} extends InputErrors
		? GetResearchGroupByPayload<T>
		: Prisma.PrismaPromise<InputErrors>;
	/**
	 * Fields of the Research model
	 */
	readonly fields: ResearchFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Research.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ResearchClient<
	T,
	Null = never,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
	readonly [Symbol.toStringTag]: "PrismaPromise";
	user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>,
	): Prisma.Prisma__UserClient<
		| runtime.Types.Result.GetResult<
				Prisma.$UserPayload<ExtArgs>,
				T,
				"findUniqueOrThrow",
				GlobalOmitOptions
		  >
		| Null,
		Null,
		ExtArgs,
		GlobalOmitOptions
	>;
	comments<T extends Prisma.Research$commentsArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Research$commentsArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$CommentPayload<ExtArgs>,
				T,
				"findMany",
				GlobalOmitOptions
		  >
		| Null
	>;
	likes<T extends Prisma.Research$likesArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Research$likesArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$LikePayload<ExtArgs>,
				T,
				"findMany",
				GlobalOmitOptions
		  >
		| Null
	>;
	linkedNotifications<
		T extends Prisma.Research$linkedNotificationsArgs<ExtArgs> = {},
	>(
		args?: Prisma.Subset<T, Prisma.Research$linkedNotificationsArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$NotificationPayload<ExtArgs>,
				T,
				"findMany",
				GlobalOmitOptions
		  >
		| Null
	>;
	attachments<T extends Prisma.Research$attachmentsArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Research$attachmentsArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$MediaPayload<ExtArgs>,
				T,
				"findMany",
				GlobalOmitOptions
		  >
		| Null
	>;
	saveResearch<T extends Prisma.Research$saveResearchArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Research$saveResearchArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$SaveResearchPayload<ExtArgs>,
				T,
				"findMany",
				GlobalOmitOptions
		  >
		| Null
	>;
	views<T extends Prisma.Research$viewsArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.Research$viewsArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$ContentViewPayload<ExtArgs>,
				T,
				"findMany",
				GlobalOmitOptions
		  >
		| Null
	>;
	/**
	 * Attaches callbacks for the resolution and/or rejection of the Promise.
	 * @param onfulfilled The callback to execute when the Promise is resolved.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of which ever callback is executed.
	 */
	then<TResult1 = T, TResult2 = never>(
		onfulfilled?:
			| ((value: T) => TResult1 | PromiseLike<TResult1>)
			| undefined
			| null,
		onrejected?:
			| ((reason: any) => TResult2 | PromiseLike<TResult2>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
	/**
	 * Attaches a callback for only the rejection of the Promise.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of the callback.
	 */
	catch<TResult = never>(
		onrejected?:
			| ((reason: any) => TResult | PromiseLike<TResult>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<T | TResult>;
	/**
	 * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
	 * resolved value cannot be modified from the callback.
	 * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
	 * @returns A Promise for the completion of the callback.
	 */
	finally(
		onfinally?: (() => void) | undefined | null,
	): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the Research model
 */
export interface ResearchFieldRefs {
	readonly id: Prisma.FieldRef<"Research", "String">;
	readonly title: Prisma.FieldRef<"Research", "String">;
	readonly description: Prisma.FieldRef<"Research", "String">;
	readonly content: Prisma.FieldRef<"Research", "String">;
	readonly createdAt: Prisma.FieldRef<"Research", "DateTime">;
	readonly updatedAt: Prisma.FieldRef<"Research", "DateTime">;
	readonly userId: Prisma.FieldRef<"Research", "String">;
}

// Custom InputTypes
/**
 * Research findUnique
 */
export type ResearchFindUniqueArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * Filter, which Research to fetch.
	 */
	where: Prisma.ResearchWhereUniqueInput;
};

/**
 * Research findUniqueOrThrow
 */
export type ResearchFindUniqueOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * Filter, which Research to fetch.
	 */
	where: Prisma.ResearchWhereUniqueInput;
};

/**
 * Research findFirst
 */
export type ResearchFindFirstArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * Filter, which Research to fetch.
	 */
	where?: Prisma.ResearchWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Research to fetch.
	 */
	orderBy?:
		| Prisma.ResearchOrderByWithRelationInput
		| Prisma.ResearchOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for Research.
	 */
	cursor?: Prisma.ResearchWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Research from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Research.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of Research.
	 */
	distinct?: Prisma.ResearchScalarFieldEnum | Prisma.ResearchScalarFieldEnum[];
};

/**
 * Research findFirstOrThrow
 */
export type ResearchFindFirstOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * Filter, which Research to fetch.
	 */
	where?: Prisma.ResearchWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Research to fetch.
	 */
	orderBy?:
		| Prisma.ResearchOrderByWithRelationInput
		| Prisma.ResearchOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for Research.
	 */
	cursor?: Prisma.ResearchWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Research from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Research.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of Research.
	 */
	distinct?: Prisma.ResearchScalarFieldEnum | Prisma.ResearchScalarFieldEnum[];
};

/**
 * Research findMany
 */
export type ResearchFindManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * Filter, which Research to fetch.
	 */
	where?: Prisma.ResearchWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of Research to fetch.
	 */
	orderBy?:
		| Prisma.ResearchOrderByWithRelationInput
		| Prisma.ResearchOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for listing Research.
	 */
	cursor?: Prisma.ResearchWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` Research from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` Research.
	 */
	skip?: number;
	distinct?: Prisma.ResearchScalarFieldEnum | Prisma.ResearchScalarFieldEnum[];
};

/**
 * Research create
 */
export type ResearchCreateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * The data needed to create a Research.
	 */
	data: Prisma.XOR<
		Prisma.ResearchCreateInput,
		Prisma.ResearchUncheckedCreateInput
	>;
};

/**
 * Research createMany
 */
export type ResearchCreateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to create many Research.
	 */
	data: Prisma.ResearchCreateManyInput | Prisma.ResearchCreateManyInput[];
};

/**
 * Research update
 */
export type ResearchUpdateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * The data needed to update a Research.
	 */
	data: Prisma.XOR<
		Prisma.ResearchUpdateInput,
		Prisma.ResearchUncheckedUpdateInput
	>;
	/**
	 * Choose, which Research to update.
	 */
	where: Prisma.ResearchWhereUniqueInput;
};

/**
 * Research updateMany
 */
export type ResearchUpdateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to update Research.
	 */
	data: Prisma.XOR<
		Prisma.ResearchUpdateManyMutationInput,
		Prisma.ResearchUncheckedUpdateManyInput
	>;
	/**
	 * Filter which Research to update
	 */
	where?: Prisma.ResearchWhereInput;
	/**
	 * Limit how many Research to update.
	 */
	limit?: number;
};

/**
 * Research upsert
 */
export type ResearchUpsertArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * The filter to search for the Research to update in case it exists.
	 */
	where: Prisma.ResearchWhereUniqueInput;
	/**
	 * In case the Research found by the `where` argument doesn't exist, create a new Research with this data.
	 */
	create: Prisma.XOR<
		Prisma.ResearchCreateInput,
		Prisma.ResearchUncheckedCreateInput
	>;
	/**
	 * In case the Research was found with the provided `where` argument, update it with this data.
	 */
	update: Prisma.XOR<
		Prisma.ResearchUpdateInput,
		Prisma.ResearchUncheckedUpdateInput
	>;
};

/**
 * Research delete
 */
export type ResearchDeleteArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
	/**
	 * Filter which Research to delete.
	 */
	where: Prisma.ResearchWhereUniqueInput;
};

/**
 * Research deleteMany
 */
export type ResearchDeleteManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which Research to delete
	 */
	where?: Prisma.ResearchWhereInput;
	/**
	 * Limit how many Research to delete.
	 */
	limit?: number;
};

/**
 * Research findRaw
 */
export type ResearchFindRawArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
	 */
	filter?: runtime.InputJsonValue;
	/**
	 * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
	 */
	options?: runtime.InputJsonValue;
};

/**
 * Research aggregateRaw
 */
export type ResearchAggregateRawArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
	 */
	pipeline?: runtime.InputJsonValue[];
	/**
	 * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
	 */
	options?: runtime.InputJsonValue;
};

/**
 * Research.comments
 */
export type Research$commentsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Comment
	 */
	select?: Prisma.CommentSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Comment
	 */
	omit?: Prisma.CommentOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CommentInclude<ExtArgs> | null;
	where?: Prisma.CommentWhereInput;
	orderBy?:
		| Prisma.CommentOrderByWithRelationInput
		| Prisma.CommentOrderByWithRelationInput[];
	cursor?: Prisma.CommentWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: Prisma.CommentScalarFieldEnum | Prisma.CommentScalarFieldEnum[];
};

/**
 * Research.likes
 */
export type Research$likesArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Like
	 */
	select?: Prisma.LikeSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Like
	 */
	omit?: Prisma.LikeOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.LikeInclude<ExtArgs> | null;
	where?: Prisma.LikeWhereInput;
	orderBy?:
		| Prisma.LikeOrderByWithRelationInput
		| Prisma.LikeOrderByWithRelationInput[];
	cursor?: Prisma.LikeWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: Prisma.LikeScalarFieldEnum | Prisma.LikeScalarFieldEnum[];
};

/**
 * Research.linkedNotifications
 */
export type Research$linkedNotificationsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Notification
	 */
	select?: Prisma.NotificationSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Notification
	 */
	omit?: Prisma.NotificationOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.NotificationInclude<ExtArgs> | null;
	where?: Prisma.NotificationWhereInput;
	orderBy?:
		| Prisma.NotificationOrderByWithRelationInput
		| Prisma.NotificationOrderByWithRelationInput[];
	cursor?: Prisma.NotificationWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?:
		| Prisma.NotificationScalarFieldEnum
		| Prisma.NotificationScalarFieldEnum[];
};

/**
 * Research.attachments
 */
export type Research$attachmentsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Media
	 */
	select?: Prisma.MediaSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Media
	 */
	omit?: Prisma.MediaOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.MediaInclude<ExtArgs> | null;
	where?: Prisma.MediaWhereInput;
	orderBy?:
		| Prisma.MediaOrderByWithRelationInput
		| Prisma.MediaOrderByWithRelationInput[];
	cursor?: Prisma.MediaWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?: Prisma.MediaScalarFieldEnum | Prisma.MediaScalarFieldEnum[];
};

/**
 * Research.saveResearch
 */
export type Research$saveResearchArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SaveResearch
	 */
	select?: Prisma.SaveResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SaveResearch
	 */
	omit?: Prisma.SaveResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SaveResearchInclude<ExtArgs> | null;
	where?: Prisma.SaveResearchWhereInput;
	orderBy?:
		| Prisma.SaveResearchOrderByWithRelationInput
		| Prisma.SaveResearchOrderByWithRelationInput[];
	cursor?: Prisma.SaveResearchWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?:
		| Prisma.SaveResearchScalarFieldEnum
		| Prisma.SaveResearchScalarFieldEnum[];
};

/**
 * Research.views
 */
export type Research$viewsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the ContentView
	 */
	select?: Prisma.ContentViewSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the ContentView
	 */
	omit?: Prisma.ContentViewOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ContentViewInclude<ExtArgs> | null;
	where?: Prisma.ContentViewWhereInput;
	orderBy?:
		| Prisma.ContentViewOrderByWithRelationInput
		| Prisma.ContentViewOrderByWithRelationInput[];
	cursor?: Prisma.ContentViewWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?:
		| Prisma.ContentViewScalarFieldEnum
		| Prisma.ContentViewScalarFieldEnum[];
};

/**
 * Research without action
 */
export type ResearchDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the Research
	 */
	select?: Prisma.ResearchSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the Research
	 */
	omit?: Prisma.ResearchOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.ResearchInclude<ExtArgs> | null;
};
