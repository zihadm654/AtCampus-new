/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `UserSkill` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model UserSkill
 *
 */
export type UserSkillModel =
	runtime.Types.Result.DefaultSelection<Prisma.$UserSkillPayload>;

export type AggregateUserSkill = {
	_count: UserSkillCountAggregateOutputType | null;
	_avg: UserSkillAvgAggregateOutputType | null;
	_sum: UserSkillSumAggregateOutputType | null;
	_min: UserSkillMinAggregateOutputType | null;
	_max: UserSkillMaxAggregateOutputType | null;
};

export type UserSkillAvgAggregateOutputType = {
	level: number | null;
	yearsOfExperience: number | null;
};

export type UserSkillSumAggregateOutputType = {
	level: number | null;
	yearsOfExperience: number | null;
};

export type UserSkillMinAggregateOutputType = {
	id: string | null;
	skillId: string | null;
	userId: string | null;
	level: number | null;
	yearsOfExperience: number | null;
	createdAt: Date | null;
	updatedAt: Date | null;
};

export type UserSkillMaxAggregateOutputType = {
	id: string | null;
	skillId: string | null;
	userId: string | null;
	level: number | null;
	yearsOfExperience: number | null;
	createdAt: Date | null;
	updatedAt: Date | null;
};

export type UserSkillCountAggregateOutputType = {
	id: number;
	skillId: number;
	userId: number;
	level: number;
	yearsOfExperience: number;
	createdAt: number;
	updatedAt: number;
	_all: number;
};

export type UserSkillAvgAggregateInputType = {
	level?: true;
	yearsOfExperience?: true;
};

export type UserSkillSumAggregateInputType = {
	level?: true;
	yearsOfExperience?: true;
};

export type UserSkillMinAggregateInputType = {
	id?: true;
	skillId?: true;
	userId?: true;
	level?: true;
	yearsOfExperience?: true;
	createdAt?: true;
	updatedAt?: true;
};

export type UserSkillMaxAggregateInputType = {
	id?: true;
	skillId?: true;
	userId?: true;
	level?: true;
	yearsOfExperience?: true;
	createdAt?: true;
	updatedAt?: true;
};

export type UserSkillCountAggregateInputType = {
	id?: true;
	skillId?: true;
	userId?: true;
	level?: true;
	yearsOfExperience?: true;
	createdAt?: true;
	updatedAt?: true;
	_all?: true;
};

export type UserSkillAggregateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which UserSkill to aggregate.
	 */
	where?: Prisma.UserSkillWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of UserSkills to fetch.
	 */
	orderBy?:
		| Prisma.UserSkillOrderByWithRelationInput
		| Prisma.UserSkillOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the start position
	 */
	cursor?: Prisma.UserSkillWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` UserSkills from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` UserSkills.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Count returned UserSkills
	 **/
	_count?: true | UserSkillCountAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to average
	 **/
	_avg?: UserSkillAvgAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to sum
	 **/
	_sum?: UserSkillSumAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the minimum value
	 **/
	_min?: UserSkillMinAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the maximum value
	 **/
	_max?: UserSkillMaxAggregateInputType;
};

export type GetUserSkillAggregateType<T extends UserSkillAggregateArgs> = {
	[P in keyof T & keyof AggregateUserSkill]: P extends "_count" | "count"
		? T[P] extends true
			? number
			: Prisma.GetScalarType<T[P], AggregateUserSkill[P]>
		: Prisma.GetScalarType<T[P], AggregateUserSkill[P]>;
};

export type UserSkillGroupByArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.UserSkillWhereInput;
	orderBy?:
		| Prisma.UserSkillOrderByWithAggregationInput
		| Prisma.UserSkillOrderByWithAggregationInput[];
	by: Prisma.UserSkillScalarFieldEnum[] | Prisma.UserSkillScalarFieldEnum;
	having?: Prisma.UserSkillScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
	_count?: UserSkillCountAggregateInputType | true;
	_avg?: UserSkillAvgAggregateInputType;
	_sum?: UserSkillSumAggregateInputType;
	_min?: UserSkillMinAggregateInputType;
	_max?: UserSkillMaxAggregateInputType;
};

export type UserSkillGroupByOutputType = {
	id: string;
	skillId: string;
	userId: string;
	level: number;
	yearsOfExperience: number | null;
	createdAt: Date;
	updatedAt: Date;
	_count: UserSkillCountAggregateOutputType | null;
	_avg: UserSkillAvgAggregateOutputType | null;
	_sum: UserSkillSumAggregateOutputType | null;
	_min: UserSkillMinAggregateOutputType | null;
	_max: UserSkillMaxAggregateOutputType | null;
};

type GetUserSkillGroupByPayload<T extends UserSkillGroupByArgs> =
	Prisma.PrismaPromise<
		Array<
			Prisma.PickEnumerable<UserSkillGroupByOutputType, T["by"]> & {
				[P in keyof T & keyof UserSkillGroupByOutputType]: P extends "_count"
					? T[P] extends boolean
						? number
						: Prisma.GetScalarType<T[P], UserSkillGroupByOutputType[P]>
					: Prisma.GetScalarType<T[P], UserSkillGroupByOutputType[P]>;
			}
		>
	>;

export type UserSkillWhereInput = {
	AND?: Prisma.UserSkillWhereInput | Prisma.UserSkillWhereInput[];
	OR?: Prisma.UserSkillWhereInput[];
	NOT?: Prisma.UserSkillWhereInput | Prisma.UserSkillWhereInput[];
	id?: Prisma.StringFilter<"UserSkill"> | string;
	skillId?: Prisma.StringFilter<"UserSkill"> | string;
	userId?: Prisma.StringFilter<"UserSkill"> | string;
	level?: Prisma.IntFilter<"UserSkill"> | number;
	yearsOfExperience?: Prisma.IntNullableFilter<"UserSkill"> | number | null;
	createdAt?: Prisma.DateTimeFilter<"UserSkill"> | Date | string;
	updatedAt?: Prisma.DateTimeFilter<"UserSkill"> | Date | string;
	skill?: Prisma.XOR<Prisma.SkillScalarRelationFilter, Prisma.SkillWhereInput>;
	user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
	endorsements?: Prisma.SkillEndorsementListRelationFilter;
};

export type UserSkillOrderByWithRelationInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
	level?: Prisma.SortOrder;
	yearsOfExperience?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	skill?: Prisma.SkillOrderByWithRelationInput;
	user?: Prisma.UserOrderByWithRelationInput;
	endorsements?: Prisma.SkillEndorsementOrderByRelationAggregateInput;
};

export type UserSkillWhereUniqueInput = Prisma.AtLeast<
	{
		id?: string;
		userId_skillId?: Prisma.UserSkillUserIdSkillIdCompoundUniqueInput;
		AND?: Prisma.UserSkillWhereInput | Prisma.UserSkillWhereInput[];
		OR?: Prisma.UserSkillWhereInput[];
		NOT?: Prisma.UserSkillWhereInput | Prisma.UserSkillWhereInput[];
		skillId?: Prisma.StringFilter<"UserSkill"> | string;
		userId?: Prisma.StringFilter<"UserSkill"> | string;
		level?: Prisma.IntFilter<"UserSkill"> | number;
		yearsOfExperience?: Prisma.IntNullableFilter<"UserSkill"> | number | null;
		createdAt?: Prisma.DateTimeFilter<"UserSkill"> | Date | string;
		updatedAt?: Prisma.DateTimeFilter<"UserSkill"> | Date | string;
		skill?: Prisma.XOR<
			Prisma.SkillScalarRelationFilter,
			Prisma.SkillWhereInput
		>;
		user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>;
		endorsements?: Prisma.SkillEndorsementListRelationFilter;
	},
	"id" | "userId_skillId"
>;

export type UserSkillOrderByWithAggregationInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
	level?: Prisma.SortOrder;
	yearsOfExperience?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	_count?: Prisma.UserSkillCountOrderByAggregateInput;
	_avg?: Prisma.UserSkillAvgOrderByAggregateInput;
	_max?: Prisma.UserSkillMaxOrderByAggregateInput;
	_min?: Prisma.UserSkillMinOrderByAggregateInput;
	_sum?: Prisma.UserSkillSumOrderByAggregateInput;
};

export type UserSkillScalarWhereWithAggregatesInput = {
	AND?:
		| Prisma.UserSkillScalarWhereWithAggregatesInput
		| Prisma.UserSkillScalarWhereWithAggregatesInput[];
	OR?: Prisma.UserSkillScalarWhereWithAggregatesInput[];
	NOT?:
		| Prisma.UserSkillScalarWhereWithAggregatesInput
		| Prisma.UserSkillScalarWhereWithAggregatesInput[];
	id?: Prisma.StringWithAggregatesFilter<"UserSkill"> | string;
	skillId?: Prisma.StringWithAggregatesFilter<"UserSkill"> | string;
	userId?: Prisma.StringWithAggregatesFilter<"UserSkill"> | string;
	level?: Prisma.IntWithAggregatesFilter<"UserSkill"> | number;
	yearsOfExperience?:
		| Prisma.IntNullableWithAggregatesFilter<"UserSkill">
		| number
		| null;
	createdAt?: Prisma.DateTimeWithAggregatesFilter<"UserSkill"> | Date | string;
	updatedAt?: Prisma.DateTimeWithAggregatesFilter<"UserSkill"> | Date | string;
};

export type UserSkillCreateInput = {
	id?: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	skill: Prisma.SkillCreateNestedOneWithoutUserSkillsInput;
	user: Prisma.UserCreateNestedOneWithoutUserSkillsInput;
	endorsements?: Prisma.SkillEndorsementCreateNestedManyWithoutUserSkillInput;
};

export type UserSkillUncheckedCreateInput = {
	id?: string;
	skillId: string;
	userId: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	endorsements?: Prisma.SkillEndorsementUncheckedCreateNestedManyWithoutUserSkillInput;
};

export type UserSkillUpdateInput = {
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	skill?: Prisma.SkillUpdateOneRequiredWithoutUserSkillsNestedInput;
	user?: Prisma.UserUpdateOneRequiredWithoutUserSkillsNestedInput;
	endorsements?: Prisma.SkillEndorsementUpdateManyWithoutUserSkillNestedInput;
};

export type UserSkillUncheckedUpdateInput = {
	skillId?: Prisma.StringFieldUpdateOperationsInput | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	endorsements?: Prisma.SkillEndorsementUncheckedUpdateManyWithoutUserSkillNestedInput;
};

export type UserSkillCreateManyInput = {
	id?: string;
	skillId: string;
	userId: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type UserSkillUpdateManyMutationInput = {
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type UserSkillUncheckedUpdateManyInput = {
	skillId?: Prisma.StringFieldUpdateOperationsInput | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type UserSkillListRelationFilter = {
	every?: Prisma.UserSkillWhereInput;
	some?: Prisma.UserSkillWhereInput;
	none?: Prisma.UserSkillWhereInput;
};

export type UserSkillOrderByRelationAggregateInput = {
	_count?: Prisma.SortOrder;
};

export type UserSkillScalarRelationFilter = {
	is?: Prisma.UserSkillWhereInput;
	isNot?: Prisma.UserSkillWhereInput;
};

export type UserSkillUserIdSkillIdCompoundUniqueInput = {
	userId: string;
	skillId: string;
};

export type UserSkillCountOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
	level?: Prisma.SortOrder;
	yearsOfExperience?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
};

export type UserSkillAvgOrderByAggregateInput = {
	level?: Prisma.SortOrder;
	yearsOfExperience?: Prisma.SortOrder;
};

export type UserSkillMaxOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
	level?: Prisma.SortOrder;
	yearsOfExperience?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
};

export type UserSkillMinOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	skillId?: Prisma.SortOrder;
	userId?: Prisma.SortOrder;
	level?: Prisma.SortOrder;
	yearsOfExperience?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
};

export type UserSkillSumOrderByAggregateInput = {
	level?: Prisma.SortOrder;
	yearsOfExperience?: Prisma.SortOrder;
};

export type UserSkillCreateNestedManyWithoutUserInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutUserInput,
				Prisma.UserSkillUncheckedCreateWithoutUserInput
		  >
		| Prisma.UserSkillCreateWithoutUserInput[]
		| Prisma.UserSkillUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutUserInput
		| Prisma.UserSkillCreateOrConnectWithoutUserInput[];
	createMany?: Prisma.UserSkillCreateManyUserInputEnvelope;
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
};

export type UserSkillUncheckedCreateNestedManyWithoutUserInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutUserInput,
				Prisma.UserSkillUncheckedCreateWithoutUserInput
		  >
		| Prisma.UserSkillCreateWithoutUserInput[]
		| Prisma.UserSkillUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutUserInput
		| Prisma.UserSkillCreateOrConnectWithoutUserInput[];
	createMany?: Prisma.UserSkillCreateManyUserInputEnvelope;
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
};

export type UserSkillUpdateManyWithoutUserNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutUserInput,
				Prisma.UserSkillUncheckedCreateWithoutUserInput
		  >
		| Prisma.UserSkillCreateWithoutUserInput[]
		| Prisma.UserSkillUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutUserInput
		| Prisma.UserSkillCreateOrConnectWithoutUserInput[];
	upsert?:
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutUserInput
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutUserInput[];
	createMany?: Prisma.UserSkillCreateManyUserInputEnvelope;
	set?: Prisma.UserSkillWhereUniqueInput | Prisma.UserSkillWhereUniqueInput[];
	disconnect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	delete?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	update?:
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutUserInput
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutUserInput[];
	updateMany?:
		| Prisma.UserSkillUpdateManyWithWhereWithoutUserInput
		| Prisma.UserSkillUpdateManyWithWhereWithoutUserInput[];
	deleteMany?:
		| Prisma.UserSkillScalarWhereInput
		| Prisma.UserSkillScalarWhereInput[];
};

export type UserSkillUncheckedUpdateManyWithoutUserNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutUserInput,
				Prisma.UserSkillUncheckedCreateWithoutUserInput
		  >
		| Prisma.UserSkillCreateWithoutUserInput[]
		| Prisma.UserSkillUncheckedCreateWithoutUserInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutUserInput
		| Prisma.UserSkillCreateOrConnectWithoutUserInput[];
	upsert?:
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutUserInput
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutUserInput[];
	createMany?: Prisma.UserSkillCreateManyUserInputEnvelope;
	set?: Prisma.UserSkillWhereUniqueInput | Prisma.UserSkillWhereUniqueInput[];
	disconnect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	delete?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	update?:
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutUserInput
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutUserInput[];
	updateMany?:
		| Prisma.UserSkillUpdateManyWithWhereWithoutUserInput
		| Prisma.UserSkillUpdateManyWithWhereWithoutUserInput[];
	deleteMany?:
		| Prisma.UserSkillScalarWhereInput
		| Prisma.UserSkillScalarWhereInput[];
};

export type UserSkillCreateNestedOneWithoutEndorsementsInput = {
	create?: Prisma.XOR<
		Prisma.UserSkillCreateWithoutEndorsementsInput,
		Prisma.UserSkillUncheckedCreateWithoutEndorsementsInput
	>;
	connectOrCreate?: Prisma.UserSkillCreateOrConnectWithoutEndorsementsInput;
	connect?: Prisma.UserSkillWhereUniqueInput;
};

export type UserSkillUpdateOneRequiredWithoutEndorsementsNestedInput = {
	create?: Prisma.XOR<
		Prisma.UserSkillCreateWithoutEndorsementsInput,
		Prisma.UserSkillUncheckedCreateWithoutEndorsementsInput
	>;
	connectOrCreate?: Prisma.UserSkillCreateOrConnectWithoutEndorsementsInput;
	upsert?: Prisma.UserSkillUpsertWithoutEndorsementsInput;
	connect?: Prisma.UserSkillWhereUniqueInput;
	update?: Prisma.XOR<
		Prisma.XOR<
			Prisma.UserSkillUpdateToOneWithWhereWithoutEndorsementsInput,
			Prisma.UserSkillUpdateWithoutEndorsementsInput
		>,
		Prisma.UserSkillUncheckedUpdateWithoutEndorsementsInput
	>;
};

export type UserSkillCreateNestedManyWithoutSkillInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutSkillInput,
				Prisma.UserSkillUncheckedCreateWithoutSkillInput
		  >
		| Prisma.UserSkillCreateWithoutSkillInput[]
		| Prisma.UserSkillUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput[];
	createMany?: Prisma.UserSkillCreateManySkillInputEnvelope;
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
};

export type UserSkillUncheckedCreateNestedManyWithoutSkillInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutSkillInput,
				Prisma.UserSkillUncheckedCreateWithoutSkillInput
		  >
		| Prisma.UserSkillCreateWithoutSkillInput[]
		| Prisma.UserSkillUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput[];
	createMany?: Prisma.UserSkillCreateManySkillInputEnvelope;
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
};

export type UserSkillUpdateManyWithoutSkillNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutSkillInput,
				Prisma.UserSkillUncheckedCreateWithoutSkillInput
		  >
		| Prisma.UserSkillCreateWithoutSkillInput[]
		| Prisma.UserSkillUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput[];
	upsert?:
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutSkillInput
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutSkillInput[];
	createMany?: Prisma.UserSkillCreateManySkillInputEnvelope;
	set?: Prisma.UserSkillWhereUniqueInput | Prisma.UserSkillWhereUniqueInput[];
	disconnect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	delete?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	update?:
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutSkillInput
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutSkillInput[];
	updateMany?:
		| Prisma.UserSkillUpdateManyWithWhereWithoutSkillInput
		| Prisma.UserSkillUpdateManyWithWhereWithoutSkillInput[];
	deleteMany?:
		| Prisma.UserSkillScalarWhereInput
		| Prisma.UserSkillScalarWhereInput[];
};

export type UserSkillUncheckedUpdateManyWithoutSkillNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.UserSkillCreateWithoutSkillInput,
				Prisma.UserSkillUncheckedCreateWithoutSkillInput
		  >
		| Prisma.UserSkillCreateWithoutSkillInput[]
		| Prisma.UserSkillUncheckedCreateWithoutSkillInput[];
	connectOrCreate?:
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput
		| Prisma.UserSkillCreateOrConnectWithoutSkillInput[];
	upsert?:
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutSkillInput
		| Prisma.UserSkillUpsertWithWhereUniqueWithoutSkillInput[];
	createMany?: Prisma.UserSkillCreateManySkillInputEnvelope;
	set?: Prisma.UserSkillWhereUniqueInput | Prisma.UserSkillWhereUniqueInput[];
	disconnect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	delete?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	connect?:
		| Prisma.UserSkillWhereUniqueInput
		| Prisma.UserSkillWhereUniqueInput[];
	update?:
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutSkillInput
		| Prisma.UserSkillUpdateWithWhereUniqueWithoutSkillInput[];
	updateMany?:
		| Prisma.UserSkillUpdateManyWithWhereWithoutSkillInput
		| Prisma.UserSkillUpdateManyWithWhereWithoutSkillInput[];
	deleteMany?:
		| Prisma.UserSkillScalarWhereInput
		| Prisma.UserSkillScalarWhereInput[];
};

export type UserSkillCreateWithoutUserInput = {
	id?: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	skill: Prisma.SkillCreateNestedOneWithoutUserSkillsInput;
	endorsements?: Prisma.SkillEndorsementCreateNestedManyWithoutUserSkillInput;
};

export type UserSkillUncheckedCreateWithoutUserInput = {
	id?: string;
	skillId: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	endorsements?: Prisma.SkillEndorsementUncheckedCreateNestedManyWithoutUserSkillInput;
};

export type UserSkillCreateOrConnectWithoutUserInput = {
	where: Prisma.UserSkillWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.UserSkillCreateWithoutUserInput,
		Prisma.UserSkillUncheckedCreateWithoutUserInput
	>;
};

export type UserSkillCreateManyUserInputEnvelope = {
	data:
		| Prisma.UserSkillCreateManyUserInput
		| Prisma.UserSkillCreateManyUserInput[];
};

export type UserSkillUpsertWithWhereUniqueWithoutUserInput = {
	where: Prisma.UserSkillWhereUniqueInput;
	update: Prisma.XOR<
		Prisma.UserSkillUpdateWithoutUserInput,
		Prisma.UserSkillUncheckedUpdateWithoutUserInput
	>;
	create: Prisma.XOR<
		Prisma.UserSkillCreateWithoutUserInput,
		Prisma.UserSkillUncheckedCreateWithoutUserInput
	>;
};

export type UserSkillUpdateWithWhereUniqueWithoutUserInput = {
	where: Prisma.UserSkillWhereUniqueInput;
	data: Prisma.XOR<
		Prisma.UserSkillUpdateWithoutUserInput,
		Prisma.UserSkillUncheckedUpdateWithoutUserInput
	>;
};

export type UserSkillUpdateManyWithWhereWithoutUserInput = {
	where: Prisma.UserSkillScalarWhereInput;
	data: Prisma.XOR<
		Prisma.UserSkillUpdateManyMutationInput,
		Prisma.UserSkillUncheckedUpdateManyWithoutUserInput
	>;
};

export type UserSkillScalarWhereInput = {
	AND?: Prisma.UserSkillScalarWhereInput | Prisma.UserSkillScalarWhereInput[];
	OR?: Prisma.UserSkillScalarWhereInput[];
	NOT?: Prisma.UserSkillScalarWhereInput | Prisma.UserSkillScalarWhereInput[];
	id?: Prisma.StringFilter<"UserSkill"> | string;
	skillId?: Prisma.StringFilter<"UserSkill"> | string;
	userId?: Prisma.StringFilter<"UserSkill"> | string;
	level?: Prisma.IntFilter<"UserSkill"> | number;
	yearsOfExperience?: Prisma.IntNullableFilter<"UserSkill"> | number | null;
	createdAt?: Prisma.DateTimeFilter<"UserSkill"> | Date | string;
	updatedAt?: Prisma.DateTimeFilter<"UserSkill"> | Date | string;
};

export type UserSkillCreateWithoutEndorsementsInput = {
	id?: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	skill: Prisma.SkillCreateNestedOneWithoutUserSkillsInput;
	user: Prisma.UserCreateNestedOneWithoutUserSkillsInput;
};

export type UserSkillUncheckedCreateWithoutEndorsementsInput = {
	id?: string;
	skillId: string;
	userId: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type UserSkillCreateOrConnectWithoutEndorsementsInput = {
	where: Prisma.UserSkillWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.UserSkillCreateWithoutEndorsementsInput,
		Prisma.UserSkillUncheckedCreateWithoutEndorsementsInput
	>;
};

export type UserSkillUpsertWithoutEndorsementsInput = {
	update: Prisma.XOR<
		Prisma.UserSkillUpdateWithoutEndorsementsInput,
		Prisma.UserSkillUncheckedUpdateWithoutEndorsementsInput
	>;
	create: Prisma.XOR<
		Prisma.UserSkillCreateWithoutEndorsementsInput,
		Prisma.UserSkillUncheckedCreateWithoutEndorsementsInput
	>;
	where?: Prisma.UserSkillWhereInput;
};

export type UserSkillUpdateToOneWithWhereWithoutEndorsementsInput = {
	where?: Prisma.UserSkillWhereInput;
	data: Prisma.XOR<
		Prisma.UserSkillUpdateWithoutEndorsementsInput,
		Prisma.UserSkillUncheckedUpdateWithoutEndorsementsInput
	>;
};

export type UserSkillUpdateWithoutEndorsementsInput = {
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	skill?: Prisma.SkillUpdateOneRequiredWithoutUserSkillsNestedInput;
	user?: Prisma.UserUpdateOneRequiredWithoutUserSkillsNestedInput;
};

export type UserSkillUncheckedUpdateWithoutEndorsementsInput = {
	skillId?: Prisma.StringFieldUpdateOperationsInput | string;
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type UserSkillCreateWithoutSkillInput = {
	id?: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	user: Prisma.UserCreateNestedOneWithoutUserSkillsInput;
	endorsements?: Prisma.SkillEndorsementCreateNestedManyWithoutUserSkillInput;
};

export type UserSkillUncheckedCreateWithoutSkillInput = {
	id?: string;
	userId: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	endorsements?: Prisma.SkillEndorsementUncheckedCreateNestedManyWithoutUserSkillInput;
};

export type UserSkillCreateOrConnectWithoutSkillInput = {
	where: Prisma.UserSkillWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.UserSkillCreateWithoutSkillInput,
		Prisma.UserSkillUncheckedCreateWithoutSkillInput
	>;
};

export type UserSkillCreateManySkillInputEnvelope = {
	data:
		| Prisma.UserSkillCreateManySkillInput
		| Prisma.UserSkillCreateManySkillInput[];
};

export type UserSkillUpsertWithWhereUniqueWithoutSkillInput = {
	where: Prisma.UserSkillWhereUniqueInput;
	update: Prisma.XOR<
		Prisma.UserSkillUpdateWithoutSkillInput,
		Prisma.UserSkillUncheckedUpdateWithoutSkillInput
	>;
	create: Prisma.XOR<
		Prisma.UserSkillCreateWithoutSkillInput,
		Prisma.UserSkillUncheckedCreateWithoutSkillInput
	>;
};

export type UserSkillUpdateWithWhereUniqueWithoutSkillInput = {
	where: Prisma.UserSkillWhereUniqueInput;
	data: Prisma.XOR<
		Prisma.UserSkillUpdateWithoutSkillInput,
		Prisma.UserSkillUncheckedUpdateWithoutSkillInput
	>;
};

export type UserSkillUpdateManyWithWhereWithoutSkillInput = {
	where: Prisma.UserSkillScalarWhereInput;
	data: Prisma.XOR<
		Prisma.UserSkillUpdateManyMutationInput,
		Prisma.UserSkillUncheckedUpdateManyWithoutSkillInput
	>;
};

export type UserSkillCreateManyUserInput = {
	id?: string;
	skillId: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type UserSkillUpdateWithoutUserInput = {
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	skill?: Prisma.SkillUpdateOneRequiredWithoutUserSkillsNestedInput;
	endorsements?: Prisma.SkillEndorsementUpdateManyWithoutUserSkillNestedInput;
};

export type UserSkillUncheckedUpdateWithoutUserInput = {
	skillId?: Prisma.StringFieldUpdateOperationsInput | string;
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	endorsements?: Prisma.SkillEndorsementUncheckedUpdateManyWithoutUserSkillNestedInput;
};

export type UserSkillUncheckedUpdateManyWithoutUserInput = {
	skillId?: Prisma.StringFieldUpdateOperationsInput | string;
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type UserSkillCreateManySkillInput = {
	id?: string;
	userId: string;
	level?: number;
	yearsOfExperience?: number | null;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type UserSkillUpdateWithoutSkillInput = {
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	user?: Prisma.UserUpdateOneRequiredWithoutUserSkillsNestedInput;
	endorsements?: Prisma.SkillEndorsementUpdateManyWithoutUserSkillNestedInput;
};

export type UserSkillUncheckedUpdateWithoutSkillInput = {
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	endorsements?: Prisma.SkillEndorsementUncheckedUpdateManyWithoutUserSkillNestedInput;
};

export type UserSkillUncheckedUpdateManyWithoutSkillInput = {
	userId?: Prisma.StringFieldUpdateOperationsInput | string;
	level?: Prisma.IntFieldUpdateOperationsInput | number;
	yearsOfExperience?:
		| Prisma.NullableIntFieldUpdateOperationsInput
		| number
		| null;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

/**
 * Count Type UserSkillCountOutputType
 */

export type UserSkillCountOutputType = {
	endorsements: number;
};

export type UserSkillCountOutputTypeSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	endorsements?: boolean | UserSkillCountOutputTypeCountEndorsementsArgs;
};

/**
 * UserSkillCountOutputType without action
 */
export type UserSkillCountOutputTypeDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkillCountOutputType
	 */
	select?: Prisma.UserSkillCountOutputTypeSelect<ExtArgs> | null;
};

/**
 * UserSkillCountOutputType without action
 */
export type UserSkillCountOutputTypeCountEndorsementsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.SkillEndorsementWhereInput;
};

export type UserSkillSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		skillId?: boolean;
		userId?: boolean;
		level?: boolean;
		yearsOfExperience?: boolean;
		createdAt?: boolean;
		updatedAt?: boolean;
		skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
		user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
		endorsements?: boolean | Prisma.UserSkill$endorsementsArgs<ExtArgs>;
		_count?: boolean | Prisma.UserSkillCountOutputTypeDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["userSkill"]
>;

export type UserSkillSelectScalar = {
	id?: boolean;
	skillId?: boolean;
	userId?: boolean;
	level?: boolean;
	yearsOfExperience?: boolean;
	createdAt?: boolean;
	updatedAt?: boolean;
};

export type UserSkillOmit<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
	| "id"
	| "skillId"
	| "userId"
	| "level"
	| "yearsOfExperience"
	| "createdAt"
	| "updatedAt",
	ExtArgs["result"]["userSkill"]
>;
export type UserSkillInclude<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	skill?: boolean | Prisma.SkillDefaultArgs<ExtArgs>;
	user?: boolean | Prisma.UserDefaultArgs<ExtArgs>;
	endorsements?: boolean | Prisma.UserSkill$endorsementsArgs<ExtArgs>;
	_count?: boolean | Prisma.UserSkillCountOutputTypeDefaultArgs<ExtArgs>;
};

export type $UserSkillPayload<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	name: "UserSkill";
	objects: {
		skill: Prisma.$SkillPayload<ExtArgs>;
		user: Prisma.$UserPayload<ExtArgs>;
		endorsements: Prisma.$SkillEndorsementPayload<ExtArgs>[];
	};
	scalars: runtime.Types.Extensions.GetPayloadResult<
		{
			id: string;
			skillId: string;
			userId: string;
			level: number;
			yearsOfExperience: number | null;
			createdAt: Date;
			updatedAt: Date;
		},
		ExtArgs["result"]["userSkill"]
	>;
	composites: {};
};

export type UserSkillGetPayload<
	S extends boolean | null | undefined | UserSkillDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$UserSkillPayload, S>;

export type UserSkillCountArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<UserSkillFindManyArgs, "select" | "include" | "distinct" | "omit"> & {
	select?: UserSkillCountAggregateInputType | true;
};

export interface UserSkillDelegate<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> {
	[K: symbol]: {
		types: Prisma.TypeMap<ExtArgs>["model"]["UserSkill"];
		meta: { name: "UserSkill" };
	};
	/**
	 * Find zero or one UserSkill that matches the filter.
	 * @param {UserSkillFindUniqueArgs} args - Arguments to find a UserSkill
	 * @example
	 * // Get one UserSkill
	 * const userSkill = await prisma.userSkill.findUnique({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUnique<T extends UserSkillFindUniqueArgs>(
		args: Prisma.SelectSubset<T, UserSkillFindUniqueArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"findUnique",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find one UserSkill that matches the filter or throw an error with `error.code='P2025'`
	 * if no matches were found.
	 * @param {UserSkillFindUniqueOrThrowArgs} args - Arguments to find a UserSkill
	 * @example
	 * // Get one UserSkill
	 * const userSkill = await prisma.userSkill.findUniqueOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUniqueOrThrow<T extends UserSkillFindUniqueOrThrowArgs>(
		args: Prisma.SelectSubset<T, UserSkillFindUniqueOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"findUniqueOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first UserSkill that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {UserSkillFindFirstArgs} args - Arguments to find a UserSkill
	 * @example
	 * // Get one UserSkill
	 * const userSkill = await prisma.userSkill.findFirst({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirst<T extends UserSkillFindFirstArgs>(
		args?: Prisma.SelectSubset<T, UserSkillFindFirstArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"findFirst",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first UserSkill that matches the filter or
	 * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {UserSkillFindFirstOrThrowArgs} args - Arguments to find a UserSkill
	 * @example
	 * // Get one UserSkill
	 * const userSkill = await prisma.userSkill.findFirstOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirstOrThrow<T extends UserSkillFindFirstOrThrowArgs>(
		args?: Prisma.SelectSubset<T, UserSkillFindFirstOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"findFirstOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more UserSkills that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {UserSkillFindManyArgs} args - Arguments to filter and select certain fields only.
	 * @example
	 * // Get all UserSkills
	 * const userSkills = await prisma.userSkill.findMany()
	 *
	 * // Get first 10 UserSkills
	 * const userSkills = await prisma.userSkill.findMany({ take: 10 })
	 *
	 * // Only select the `id`
	 * const userSkillWithIdOnly = await prisma.userSkill.findMany({ select: { id: true } })
	 *
	 */
	findMany<T extends UserSkillFindManyArgs>(
		args?: Prisma.SelectSubset<T, UserSkillFindManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"findMany",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create a UserSkill.
	 * @param {UserSkillCreateArgs} args - Arguments to create a UserSkill.
	 * @example
	 * // Create one UserSkill
	 * const UserSkill = await prisma.userSkill.create({
	 *   data: {
	 *     // ... data to create a UserSkill
	 *   }
	 * })
	 *
	 */
	create<T extends UserSkillCreateArgs>(
		args: Prisma.SelectSubset<T, UserSkillCreateArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"create",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Create many UserSkills.
	 * @param {UserSkillCreateManyArgs} args - Arguments to create many UserSkills.
	 * @example
	 * // Create many UserSkills
	 * const userSkill = await prisma.userSkill.createMany({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 */
	createMany<T extends UserSkillCreateManyArgs>(
		args?: Prisma.SelectSubset<T, UserSkillCreateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Delete a UserSkill.
	 * @param {UserSkillDeleteArgs} args - Arguments to delete one UserSkill.
	 * @example
	 * // Delete one UserSkill
	 * const UserSkill = await prisma.userSkill.delete({
	 *   where: {
	 *     // ... filter to delete one UserSkill
	 *   }
	 * })
	 *
	 */
	delete<T extends UserSkillDeleteArgs>(
		args: Prisma.SelectSubset<T, UserSkillDeleteArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"delete",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Update one UserSkill.
	 * @param {UserSkillUpdateArgs} args - Arguments to update one UserSkill.
	 * @example
	 * // Update one UserSkill
	 * const userSkill = await prisma.userSkill.update({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	update<T extends UserSkillUpdateArgs>(
		args: Prisma.SelectSubset<T, UserSkillUpdateArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"update",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Delete zero or more UserSkills.
	 * @param {UserSkillDeleteManyArgs} args - Arguments to filter UserSkills to delete.
	 * @example
	 * // Delete a few UserSkills
	 * const { count } = await prisma.userSkill.deleteMany({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 *
	 */
	deleteMany<T extends UserSkillDeleteManyArgs>(
		args?: Prisma.SelectSubset<T, UserSkillDeleteManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more UserSkills.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {UserSkillUpdateManyArgs} args - Arguments to update one or more rows.
	 * @example
	 * // Update many UserSkills
	 * const userSkill = await prisma.userSkill.updateMany({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	updateMany<T extends UserSkillUpdateManyArgs>(
		args: Prisma.SelectSubset<T, UserSkillUpdateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Create or update one UserSkill.
	 * @param {UserSkillUpsertArgs} args - Arguments to update or create a UserSkill.
	 * @example
	 * // Update or create a UserSkill
	 * const userSkill = await prisma.userSkill.upsert({
	 *   create: {
	 *     // ... data to create a UserSkill
	 *   },
	 *   update: {
	 *     // ... in case it already exists, update
	 *   },
	 *   where: {
	 *     // ... the filter for the UserSkill we want to update
	 *   }
	 * })
	 */
	upsert<T extends UserSkillUpsertArgs>(
		args: Prisma.SelectSubset<T, UserSkillUpsertArgs<ExtArgs>>,
	): Prisma.Prisma__UserSkillClient<
		runtime.Types.Result.GetResult<
			Prisma.$UserSkillPayload<ExtArgs>,
			T,
			"upsert",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more UserSkills that matches the filter.
	 * @param {UserSkillFindRawArgs} args - Select which filters you would like to apply.
	 * @example
	 * const userSkill = await prisma.userSkill.findRaw({
	 *   filter: { age: { $gt: 25 } }
	 * })
	 */
	findRaw(
		args?: Prisma.UserSkillFindRawArgs,
	): Prisma.PrismaPromise<Prisma.JsonObject>;

	/**
	 * Perform aggregation operations on a UserSkill.
	 * @param {UserSkillAggregateRawArgs} args - Select which aggregations you would like to apply.
	 * @example
	 * const userSkill = await prisma.userSkill.aggregateRaw({
	 *   pipeline: [
	 *     { $match: { status: "registered" } },
	 *     { $group: { _id: "$country", total: { $sum: 1 } } }
	 *   ]
	 * })
	 */
	aggregateRaw(
		args?: Prisma.UserSkillAggregateRawArgs,
	): Prisma.PrismaPromise<Prisma.JsonObject>;

	/**
	 * Count the number of UserSkills.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {UserSkillCountArgs} args - Arguments to filter UserSkills to count.
	 * @example
	 * // Count the number of UserSkills
	 * const count = await prisma.userSkill.count({
	 *   where: {
	 *     // ... the filter for the UserSkills we want to count
	 *   }
	 * })
	 **/
	count<T extends UserSkillCountArgs>(
		args?: Prisma.Subset<T, UserSkillCountArgs>,
	): Prisma.PrismaPromise<
		T extends runtime.Types.Utils.Record<"select", any>
			? T["select"] extends true
				? number
				: Prisma.GetScalarType<T["select"], UserSkillCountAggregateOutputType>
			: number
	>;

	/**
	 * Allows you to perform aggregations operations on a UserSkill.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {UserSkillAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
	 * @example
	 * // Ordered by age ascending
	 * // Where email contains prisma.io
	 * // Limited to the 10 users
	 * const aggregations = await prisma.user.aggregate({
	 *   _avg: {
	 *     age: true,
	 *   },
	 *   where: {
	 *     email: {
	 *       contains: "prisma.io",
	 *     },
	 *   },
	 *   orderBy: {
	 *     age: "asc",
	 *   },
	 *   take: 10,
	 * })
	 **/
	aggregate<T extends UserSkillAggregateArgs>(
		args: Prisma.Subset<T, UserSkillAggregateArgs>,
	): Prisma.PrismaPromise<GetUserSkillAggregateType<T>>;

	/**
	 * Group by UserSkill.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {UserSkillGroupByArgs} args - Group by arguments.
	 * @example
	 * // Group by city, order by createdAt, get count
	 * const result = await prisma.user.groupBy({
	 *   by: ['city', 'createdAt'],
	 *   orderBy: {
	 *     createdAt: true
	 *   },
	 *   _count: {
	 *     _all: true
	 *   },
	 * })
	 *
	 **/
	groupBy<
		T extends UserSkillGroupByArgs,
		HasSelectOrTake extends Prisma.Or<
			Prisma.Extends<"skip", Prisma.Keys<T>>,
			Prisma.Extends<"take", Prisma.Keys<T>>
		>,
		OrderByArg extends Prisma.True extends HasSelectOrTake
			? { orderBy: UserSkillGroupByArgs["orderBy"] }
			: { orderBy?: UserSkillGroupByArgs["orderBy"] },
		OrderFields extends Prisma.ExcludeUnderscoreKeys<
			Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
		>,
		ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
		ByValid extends Prisma.Has<ByFields, OrderFields>,
		HavingFields extends Prisma.GetHavingFields<T["having"]>,
		HavingValid extends Prisma.Has<ByFields, HavingFields>,
		ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
		InputErrors extends ByEmpty extends Prisma.True
			? `Error: "by" must not be empty.`
			: HavingValid extends Prisma.False
				? {
						[P in HavingFields]: P extends ByFields
							? never
							: P extends string
								? `Error: Field "${P}" used in "having" needs to be provided in "by".`
								: [
										Error,
										"Field ",
										P,
										` in "having" needs to be provided in "by"`,
									];
					}[HavingFields]
				: "take" extends Prisma.Keys<T>
					? "orderBy" extends Prisma.Keys<T>
						? ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields]
						: 'Error: If you provide "take", you also need to provide "orderBy"'
					: "skip" extends Prisma.Keys<T>
						? "orderBy" extends Prisma.Keys<T>
							? ByValid extends Prisma.True
								? {}
								: {
										[P in OrderFields]: P extends ByFields
											? never
											: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
									}[OrderFields]
							: 'Error: If you provide "skip", you also need to provide "orderBy"'
						: ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields],
	>(
		args: Prisma.SubsetIntersection<T, UserSkillGroupByArgs, OrderByArg> &
			InputErrors,
	): {} extends InputErrors
		? GetUserSkillGroupByPayload<T>
		: Prisma.PrismaPromise<InputErrors>;
	/**
	 * Fields of the UserSkill model
	 */
	readonly fields: UserSkillFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for UserSkill.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__UserSkillClient<
	T,
	Null = never,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
	readonly [Symbol.toStringTag]: "PrismaPromise";
	skill<T extends Prisma.SkillDefaultArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.SkillDefaultArgs<ExtArgs>>,
	): Prisma.Prisma__SkillClient<
		| runtime.Types.Result.GetResult<
				Prisma.$SkillPayload<ExtArgs>,
				T,
				"findUniqueOrThrow",
				GlobalOmitOptions
		  >
		| Null,
		Null,
		ExtArgs,
		GlobalOmitOptions
	>;
	user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>,
	): Prisma.Prisma__UserClient<
		| runtime.Types.Result.GetResult<
				Prisma.$UserPayload<ExtArgs>,
				T,
				"findUniqueOrThrow",
				GlobalOmitOptions
		  >
		| Null,
		Null,
		ExtArgs,
		GlobalOmitOptions
	>;
	endorsements<T extends Prisma.UserSkill$endorsementsArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.UserSkill$endorsementsArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		| runtime.Types.Result.GetResult<
				Prisma.$SkillEndorsementPayload<ExtArgs>,
				T,
				"findMany",
				GlobalOmitOptions
		  >
		| Null
	>;
	/**
	 * Attaches callbacks for the resolution and/or rejection of the Promise.
	 * @param onfulfilled The callback to execute when the Promise is resolved.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of which ever callback is executed.
	 */
	then<TResult1 = T, TResult2 = never>(
		onfulfilled?:
			| ((value: T) => TResult1 | PromiseLike<TResult1>)
			| undefined
			| null,
		onrejected?:
			| ((reason: any) => TResult2 | PromiseLike<TResult2>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
	/**
	 * Attaches a callback for only the rejection of the Promise.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of the callback.
	 */
	catch<TResult = never>(
		onrejected?:
			| ((reason: any) => TResult | PromiseLike<TResult>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<T | TResult>;
	/**
	 * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
	 * resolved value cannot be modified from the callback.
	 * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
	 * @returns A Promise for the completion of the callback.
	 */
	finally(
		onfinally?: (() => void) | undefined | null,
	): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the UserSkill model
 */
export interface UserSkillFieldRefs {
	readonly id: Prisma.FieldRef<"UserSkill", "String">;
	readonly skillId: Prisma.FieldRef<"UserSkill", "String">;
	readonly userId: Prisma.FieldRef<"UserSkill", "String">;
	readonly level: Prisma.FieldRef<"UserSkill", "Int">;
	readonly yearsOfExperience: Prisma.FieldRef<"UserSkill", "Int">;
	readonly createdAt: Prisma.FieldRef<"UserSkill", "DateTime">;
	readonly updatedAt: Prisma.FieldRef<"UserSkill", "DateTime">;
}

// Custom InputTypes
/**
 * UserSkill findUnique
 */
export type UserSkillFindUniqueArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * Filter, which UserSkill to fetch.
	 */
	where: Prisma.UserSkillWhereUniqueInput;
};

/**
 * UserSkill findUniqueOrThrow
 */
export type UserSkillFindUniqueOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * Filter, which UserSkill to fetch.
	 */
	where: Prisma.UserSkillWhereUniqueInput;
};

/**
 * UserSkill findFirst
 */
export type UserSkillFindFirstArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * Filter, which UserSkill to fetch.
	 */
	where?: Prisma.UserSkillWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of UserSkills to fetch.
	 */
	orderBy?:
		| Prisma.UserSkillOrderByWithRelationInput
		| Prisma.UserSkillOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for UserSkills.
	 */
	cursor?: Prisma.UserSkillWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` UserSkills from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` UserSkills.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of UserSkills.
	 */
	distinct?:
		| Prisma.UserSkillScalarFieldEnum
		| Prisma.UserSkillScalarFieldEnum[];
};

/**
 * UserSkill findFirstOrThrow
 */
export type UserSkillFindFirstOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * Filter, which UserSkill to fetch.
	 */
	where?: Prisma.UserSkillWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of UserSkills to fetch.
	 */
	orderBy?:
		| Prisma.UserSkillOrderByWithRelationInput
		| Prisma.UserSkillOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for UserSkills.
	 */
	cursor?: Prisma.UserSkillWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` UserSkills from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` UserSkills.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of UserSkills.
	 */
	distinct?:
		| Prisma.UserSkillScalarFieldEnum
		| Prisma.UserSkillScalarFieldEnum[];
};

/**
 * UserSkill findMany
 */
export type UserSkillFindManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * Filter, which UserSkills to fetch.
	 */
	where?: Prisma.UserSkillWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of UserSkills to fetch.
	 */
	orderBy?:
		| Prisma.UserSkillOrderByWithRelationInput
		| Prisma.UserSkillOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for listing UserSkills.
	 */
	cursor?: Prisma.UserSkillWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` UserSkills from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` UserSkills.
	 */
	skip?: number;
	distinct?:
		| Prisma.UserSkillScalarFieldEnum
		| Prisma.UserSkillScalarFieldEnum[];
};

/**
 * UserSkill create
 */
export type UserSkillCreateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * The data needed to create a UserSkill.
	 */
	data: Prisma.XOR<
		Prisma.UserSkillCreateInput,
		Prisma.UserSkillUncheckedCreateInput
	>;
};

/**
 * UserSkill createMany
 */
export type UserSkillCreateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to create many UserSkills.
	 */
	data: Prisma.UserSkillCreateManyInput | Prisma.UserSkillCreateManyInput[];
};

/**
 * UserSkill update
 */
export type UserSkillUpdateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * The data needed to update a UserSkill.
	 */
	data: Prisma.XOR<
		Prisma.UserSkillUpdateInput,
		Prisma.UserSkillUncheckedUpdateInput
	>;
	/**
	 * Choose, which UserSkill to update.
	 */
	where: Prisma.UserSkillWhereUniqueInput;
};

/**
 * UserSkill updateMany
 */
export type UserSkillUpdateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to update UserSkills.
	 */
	data: Prisma.XOR<
		Prisma.UserSkillUpdateManyMutationInput,
		Prisma.UserSkillUncheckedUpdateManyInput
	>;
	/**
	 * Filter which UserSkills to update
	 */
	where?: Prisma.UserSkillWhereInput;
	/**
	 * Limit how many UserSkills to update.
	 */
	limit?: number;
};

/**
 * UserSkill upsert
 */
export type UserSkillUpsertArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * The filter to search for the UserSkill to update in case it exists.
	 */
	where: Prisma.UserSkillWhereUniqueInput;
	/**
	 * In case the UserSkill found by the `where` argument doesn't exist, create a new UserSkill with this data.
	 */
	create: Prisma.XOR<
		Prisma.UserSkillCreateInput,
		Prisma.UserSkillUncheckedCreateInput
	>;
	/**
	 * In case the UserSkill was found with the provided `where` argument, update it with this data.
	 */
	update: Prisma.XOR<
		Prisma.UserSkillUpdateInput,
		Prisma.UserSkillUncheckedUpdateInput
	>;
};

/**
 * UserSkill delete
 */
export type UserSkillDeleteArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
	/**
	 * Filter which UserSkill to delete.
	 */
	where: Prisma.UserSkillWhereUniqueInput;
};

/**
 * UserSkill deleteMany
 */
export type UserSkillDeleteManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which UserSkills to delete
	 */
	where?: Prisma.UserSkillWhereInput;
	/**
	 * Limit how many UserSkills to delete.
	 */
	limit?: number;
};

/**
 * UserSkill findRaw
 */
export type UserSkillFindRawArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
	 */
	filter?: runtime.InputJsonValue;
	/**
	 * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
	 */
	options?: runtime.InputJsonValue;
};

/**
 * UserSkill aggregateRaw
 */
export type UserSkillAggregateRawArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
	 */
	pipeline?: runtime.InputJsonValue[];
	/**
	 * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
	 */
	options?: runtime.InputJsonValue;
};

/**
 * UserSkill.endorsements
 */
export type UserSkill$endorsementsArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the SkillEndorsement
	 */
	select?: Prisma.SkillEndorsementSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the SkillEndorsement
	 */
	omit?: Prisma.SkillEndorsementOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.SkillEndorsementInclude<ExtArgs> | null;
	where?: Prisma.SkillEndorsementWhereInput;
	orderBy?:
		| Prisma.SkillEndorsementOrderByWithRelationInput
		| Prisma.SkillEndorsementOrderByWithRelationInput[];
	cursor?: Prisma.SkillEndorsementWhereUniqueInput;
	take?: number;
	skip?: number;
	distinct?:
		| Prisma.SkillEndorsementScalarFieldEnum
		| Prisma.SkillEndorsementScalarFieldEnum[];
};

/**
 * UserSkill without action
 */
export type UserSkillDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the UserSkill
	 */
	select?: Prisma.UserSkillSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the UserSkill
	 */
	omit?: Prisma.UserSkillOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.UserSkillInclude<ExtArgs> | null;
};
