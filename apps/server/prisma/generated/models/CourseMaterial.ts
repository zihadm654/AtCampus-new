/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file exports the `CourseMaterial` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library";
import type * as $Enums from "../enums";
import type * as Prisma from "../internal/prismaNamespace";

/**
 * Model CourseMaterial
 *
 */
export type CourseMaterialModel =
	runtime.Types.Result.DefaultSelection<Prisma.$CourseMaterialPayload>;

export type AggregateCourseMaterial = {
	_count: CourseMaterialCountAggregateOutputType | null;
	_avg: CourseMaterialAvgAggregateOutputType | null;
	_sum: CourseMaterialSumAggregateOutputType | null;
	_min: CourseMaterialMinAggregateOutputType | null;
	_max: CourseMaterialMaxAggregateOutputType | null;
};

export type CourseMaterialAvgAggregateOutputType = {
	order: number | null;
};

export type CourseMaterialSumAggregateOutputType = {
	order: number | null;
};

export type CourseMaterialMinAggregateOutputType = {
	id: string | null;
	title: string | null;
	type: string | null;
	content: string | null;
	fileUrl: string | null;
	order: number | null;
	courseId: string | null;
	createdAt: Date | null;
	updatedAt: Date | null;
};

export type CourseMaterialMaxAggregateOutputType = {
	id: string | null;
	title: string | null;
	type: string | null;
	content: string | null;
	fileUrl: string | null;
	order: number | null;
	courseId: string | null;
	createdAt: Date | null;
	updatedAt: Date | null;
};

export type CourseMaterialCountAggregateOutputType = {
	id: number;
	title: number;
	type: number;
	content: number;
	fileUrl: number;
	order: number;
	courseId: number;
	createdAt: number;
	updatedAt: number;
	_all: number;
};

export type CourseMaterialAvgAggregateInputType = {
	order?: true;
};

export type CourseMaterialSumAggregateInputType = {
	order?: true;
};

export type CourseMaterialMinAggregateInputType = {
	id?: true;
	title?: true;
	type?: true;
	content?: true;
	fileUrl?: true;
	order?: true;
	courseId?: true;
	createdAt?: true;
	updatedAt?: true;
};

export type CourseMaterialMaxAggregateInputType = {
	id?: true;
	title?: true;
	type?: true;
	content?: true;
	fileUrl?: true;
	order?: true;
	courseId?: true;
	createdAt?: true;
	updatedAt?: true;
};

export type CourseMaterialCountAggregateInputType = {
	id?: true;
	title?: true;
	type?: true;
	content?: true;
	fileUrl?: true;
	order?: true;
	courseId?: true;
	createdAt?: true;
	updatedAt?: true;
	_all?: true;
};

export type CourseMaterialAggregateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which CourseMaterial to aggregate.
	 */
	where?: Prisma.CourseMaterialWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of CourseMaterials to fetch.
	 */
	orderBy?:
		| Prisma.CourseMaterialOrderByWithRelationInput
		| Prisma.CourseMaterialOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the start position
	 */
	cursor?: Prisma.CourseMaterialWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` CourseMaterials from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` CourseMaterials.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Count returned CourseMaterials
	 **/
	_count?: true | CourseMaterialCountAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to average
	 **/
	_avg?: CourseMaterialAvgAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to sum
	 **/
	_sum?: CourseMaterialSumAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the minimum value
	 **/
	_min?: CourseMaterialMinAggregateInputType;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
	 *
	 * Select which fields to find the maximum value
	 **/
	_max?: CourseMaterialMaxAggregateInputType;
};

export type GetCourseMaterialAggregateType<
	T extends CourseMaterialAggregateArgs,
> = {
	[P in keyof T & keyof AggregateCourseMaterial]: P extends "_count" | "count"
		? T[P] extends true
			? number
			: Prisma.GetScalarType<T[P], AggregateCourseMaterial[P]>
		: Prisma.GetScalarType<T[P], AggregateCourseMaterial[P]>;
};

export type CourseMaterialGroupByArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	where?: Prisma.CourseMaterialWhereInput;
	orderBy?:
		| Prisma.CourseMaterialOrderByWithAggregationInput
		| Prisma.CourseMaterialOrderByWithAggregationInput[];
	by:
		| Prisma.CourseMaterialScalarFieldEnum[]
		| Prisma.CourseMaterialScalarFieldEnum;
	having?: Prisma.CourseMaterialScalarWhereWithAggregatesInput;
	take?: number;
	skip?: number;
	_count?: CourseMaterialCountAggregateInputType | true;
	_avg?: CourseMaterialAvgAggregateInputType;
	_sum?: CourseMaterialSumAggregateInputType;
	_min?: CourseMaterialMinAggregateInputType;
	_max?: CourseMaterialMaxAggregateInputType;
};

export type CourseMaterialGroupByOutputType = {
	id: string;
	title: string;
	type: string;
	content: string | null;
	fileUrl: string | null;
	order: number;
	courseId: string;
	createdAt: Date;
	updatedAt: Date;
	_count: CourseMaterialCountAggregateOutputType | null;
	_avg: CourseMaterialAvgAggregateOutputType | null;
	_sum: CourseMaterialSumAggregateOutputType | null;
	_min: CourseMaterialMinAggregateOutputType | null;
	_max: CourseMaterialMaxAggregateOutputType | null;
};

type GetCourseMaterialGroupByPayload<T extends CourseMaterialGroupByArgs> =
	Prisma.PrismaPromise<
		Array<
			Prisma.PickEnumerable<CourseMaterialGroupByOutputType, T["by"]> & {
				[P in keyof T &
					keyof CourseMaterialGroupByOutputType]: P extends "_count"
					? T[P] extends boolean
						? number
						: Prisma.GetScalarType<T[P], CourseMaterialGroupByOutputType[P]>
					: Prisma.GetScalarType<T[P], CourseMaterialGroupByOutputType[P]>;
			}
		>
	>;

export type CourseMaterialWhereInput = {
	AND?: Prisma.CourseMaterialWhereInput | Prisma.CourseMaterialWhereInput[];
	OR?: Prisma.CourseMaterialWhereInput[];
	NOT?: Prisma.CourseMaterialWhereInput | Prisma.CourseMaterialWhereInput[];
	id?: Prisma.StringFilter<"CourseMaterial"> | string;
	title?: Prisma.StringFilter<"CourseMaterial"> | string;
	type?: Prisma.StringFilter<"CourseMaterial"> | string;
	content?: Prisma.StringNullableFilter<"CourseMaterial"> | string | null;
	fileUrl?: Prisma.StringNullableFilter<"CourseMaterial"> | string | null;
	order?: Prisma.IntFilter<"CourseMaterial"> | number;
	courseId?: Prisma.StringFilter<"CourseMaterial"> | string;
	createdAt?: Prisma.DateTimeFilter<"CourseMaterial"> | Date | string;
	updatedAt?: Prisma.DateTimeFilter<"CourseMaterial"> | Date | string;
	course?: Prisma.XOR<
		Prisma.CourseScalarRelationFilter,
		Prisma.CourseWhereInput
	>;
};

export type CourseMaterialOrderByWithRelationInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	type?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	fileUrl?: Prisma.SortOrder;
	order?: Prisma.SortOrder;
	courseId?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	course?: Prisma.CourseOrderByWithRelationInput;
};

export type CourseMaterialWhereUniqueInput = Prisma.AtLeast<
	{
		id?: string;
		AND?: Prisma.CourseMaterialWhereInput | Prisma.CourseMaterialWhereInput[];
		OR?: Prisma.CourseMaterialWhereInput[];
		NOT?: Prisma.CourseMaterialWhereInput | Prisma.CourseMaterialWhereInput[];
		title?: Prisma.StringFilter<"CourseMaterial"> | string;
		type?: Prisma.StringFilter<"CourseMaterial"> | string;
		content?: Prisma.StringNullableFilter<"CourseMaterial"> | string | null;
		fileUrl?: Prisma.StringNullableFilter<"CourseMaterial"> | string | null;
		order?: Prisma.IntFilter<"CourseMaterial"> | number;
		courseId?: Prisma.StringFilter<"CourseMaterial"> | string;
		createdAt?: Prisma.DateTimeFilter<"CourseMaterial"> | Date | string;
		updatedAt?: Prisma.DateTimeFilter<"CourseMaterial"> | Date | string;
		course?: Prisma.XOR<
			Prisma.CourseScalarRelationFilter,
			Prisma.CourseWhereInput
		>;
	},
	"id"
>;

export type CourseMaterialOrderByWithAggregationInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	type?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	fileUrl?: Prisma.SortOrder;
	order?: Prisma.SortOrder;
	courseId?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
	_count?: Prisma.CourseMaterialCountOrderByAggregateInput;
	_avg?: Prisma.CourseMaterialAvgOrderByAggregateInput;
	_max?: Prisma.CourseMaterialMaxOrderByAggregateInput;
	_min?: Prisma.CourseMaterialMinOrderByAggregateInput;
	_sum?: Prisma.CourseMaterialSumOrderByAggregateInput;
};

export type CourseMaterialScalarWhereWithAggregatesInput = {
	AND?:
		| Prisma.CourseMaterialScalarWhereWithAggregatesInput
		| Prisma.CourseMaterialScalarWhereWithAggregatesInput[];
	OR?: Prisma.CourseMaterialScalarWhereWithAggregatesInput[];
	NOT?:
		| Prisma.CourseMaterialScalarWhereWithAggregatesInput
		| Prisma.CourseMaterialScalarWhereWithAggregatesInput[];
	id?: Prisma.StringWithAggregatesFilter<"CourseMaterial"> | string;
	title?: Prisma.StringWithAggregatesFilter<"CourseMaterial"> | string;
	type?: Prisma.StringWithAggregatesFilter<"CourseMaterial"> | string;
	content?:
		| Prisma.StringNullableWithAggregatesFilter<"CourseMaterial">
		| string
		| null;
	fileUrl?:
		| Prisma.StringNullableWithAggregatesFilter<"CourseMaterial">
		| string
		| null;
	order?: Prisma.IntWithAggregatesFilter<"CourseMaterial"> | number;
	courseId?: Prisma.StringWithAggregatesFilter<"CourseMaterial"> | string;
	createdAt?:
		| Prisma.DateTimeWithAggregatesFilter<"CourseMaterial">
		| Date
		| string;
	updatedAt?:
		| Prisma.DateTimeWithAggregatesFilter<"CourseMaterial">
		| Date
		| string;
};

export type CourseMaterialCreateInput = {
	id?: string;
	title: string;
	type: string;
	content?: string | null;
	fileUrl?: string | null;
	order?: number;
	createdAt?: Date | string;
	updatedAt?: Date | string;
	course: Prisma.CourseCreateNestedOneWithoutMaterialsInput;
};

export type CourseMaterialUncheckedCreateInput = {
	id?: string;
	title: string;
	type: string;
	content?: string | null;
	fileUrl?: string | null;
	order?: number;
	courseId: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type CourseMaterialUpdateInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	type?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	fileUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	order?: Prisma.IntFieldUpdateOperationsInput | number;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	course?: Prisma.CourseUpdateOneRequiredWithoutMaterialsNestedInput;
};

export type CourseMaterialUncheckedUpdateInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	type?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	fileUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	order?: Prisma.IntFieldUpdateOperationsInput | number;
	courseId?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CourseMaterialCreateManyInput = {
	id?: string;
	title: string;
	type: string;
	content?: string | null;
	fileUrl?: string | null;
	order?: number;
	courseId: string;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type CourseMaterialUpdateManyMutationInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	type?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	fileUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	order?: Prisma.IntFieldUpdateOperationsInput | number;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CourseMaterialUncheckedUpdateManyInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	type?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	fileUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	order?: Prisma.IntFieldUpdateOperationsInput | number;
	courseId?: Prisma.StringFieldUpdateOperationsInput | string;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CourseMaterialListRelationFilter = {
	every?: Prisma.CourseMaterialWhereInput;
	some?: Prisma.CourseMaterialWhereInput;
	none?: Prisma.CourseMaterialWhereInput;
};

export type CourseMaterialOrderByRelationAggregateInput = {
	_count?: Prisma.SortOrder;
};

export type CourseMaterialCountOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	type?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	fileUrl?: Prisma.SortOrder;
	order?: Prisma.SortOrder;
	courseId?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
};

export type CourseMaterialAvgOrderByAggregateInput = {
	order?: Prisma.SortOrder;
};

export type CourseMaterialMaxOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	type?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	fileUrl?: Prisma.SortOrder;
	order?: Prisma.SortOrder;
	courseId?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
};

export type CourseMaterialMinOrderByAggregateInput = {
	id?: Prisma.SortOrder;
	title?: Prisma.SortOrder;
	type?: Prisma.SortOrder;
	content?: Prisma.SortOrder;
	fileUrl?: Prisma.SortOrder;
	order?: Prisma.SortOrder;
	courseId?: Prisma.SortOrder;
	createdAt?: Prisma.SortOrder;
	updatedAt?: Prisma.SortOrder;
};

export type CourseMaterialSumOrderByAggregateInput = {
	order?: Prisma.SortOrder;
};

export type CourseMaterialCreateNestedManyWithoutCourseInput = {
	create?:
		| Prisma.XOR<
				Prisma.CourseMaterialCreateWithoutCourseInput,
				Prisma.CourseMaterialUncheckedCreateWithoutCourseInput
		  >
		| Prisma.CourseMaterialCreateWithoutCourseInput[]
		| Prisma.CourseMaterialUncheckedCreateWithoutCourseInput[];
	connectOrCreate?:
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput[];
	createMany?: Prisma.CourseMaterialCreateManyCourseInputEnvelope;
	connect?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
};

export type CourseMaterialUncheckedCreateNestedManyWithoutCourseInput = {
	create?:
		| Prisma.XOR<
				Prisma.CourseMaterialCreateWithoutCourseInput,
				Prisma.CourseMaterialUncheckedCreateWithoutCourseInput
		  >
		| Prisma.CourseMaterialCreateWithoutCourseInput[]
		| Prisma.CourseMaterialUncheckedCreateWithoutCourseInput[];
	connectOrCreate?:
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput[];
	createMany?: Prisma.CourseMaterialCreateManyCourseInputEnvelope;
	connect?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
};

export type CourseMaterialUpdateManyWithoutCourseNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.CourseMaterialCreateWithoutCourseInput,
				Prisma.CourseMaterialUncheckedCreateWithoutCourseInput
		  >
		| Prisma.CourseMaterialCreateWithoutCourseInput[]
		| Prisma.CourseMaterialUncheckedCreateWithoutCourseInput[];
	connectOrCreate?:
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput[];
	upsert?:
		| Prisma.CourseMaterialUpsertWithWhereUniqueWithoutCourseInput
		| Prisma.CourseMaterialUpsertWithWhereUniqueWithoutCourseInput[];
	createMany?: Prisma.CourseMaterialCreateManyCourseInputEnvelope;
	set?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	disconnect?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	delete?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	connect?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	update?:
		| Prisma.CourseMaterialUpdateWithWhereUniqueWithoutCourseInput
		| Prisma.CourseMaterialUpdateWithWhereUniqueWithoutCourseInput[];
	updateMany?:
		| Prisma.CourseMaterialUpdateManyWithWhereWithoutCourseInput
		| Prisma.CourseMaterialUpdateManyWithWhereWithoutCourseInput[];
	deleteMany?:
		| Prisma.CourseMaterialScalarWhereInput
		| Prisma.CourseMaterialScalarWhereInput[];
};

export type CourseMaterialUncheckedUpdateManyWithoutCourseNestedInput = {
	create?:
		| Prisma.XOR<
				Prisma.CourseMaterialCreateWithoutCourseInput,
				Prisma.CourseMaterialUncheckedCreateWithoutCourseInput
		  >
		| Prisma.CourseMaterialCreateWithoutCourseInput[]
		| Prisma.CourseMaterialUncheckedCreateWithoutCourseInput[];
	connectOrCreate?:
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput
		| Prisma.CourseMaterialCreateOrConnectWithoutCourseInput[];
	upsert?:
		| Prisma.CourseMaterialUpsertWithWhereUniqueWithoutCourseInput
		| Prisma.CourseMaterialUpsertWithWhereUniqueWithoutCourseInput[];
	createMany?: Prisma.CourseMaterialCreateManyCourseInputEnvelope;
	set?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	disconnect?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	delete?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	connect?:
		| Prisma.CourseMaterialWhereUniqueInput
		| Prisma.CourseMaterialWhereUniqueInput[];
	update?:
		| Prisma.CourseMaterialUpdateWithWhereUniqueWithoutCourseInput
		| Prisma.CourseMaterialUpdateWithWhereUniqueWithoutCourseInput[];
	updateMany?:
		| Prisma.CourseMaterialUpdateManyWithWhereWithoutCourseInput
		| Prisma.CourseMaterialUpdateManyWithWhereWithoutCourseInput[];
	deleteMany?:
		| Prisma.CourseMaterialScalarWhereInput
		| Prisma.CourseMaterialScalarWhereInput[];
};

export type IntFieldUpdateOperationsInput = {
	set?: number;
	increment?: number;
	decrement?: number;
	multiply?: number;
	divide?: number;
};

export type CourseMaterialCreateWithoutCourseInput = {
	id?: string;
	title: string;
	type: string;
	content?: string | null;
	fileUrl?: string | null;
	order?: number;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type CourseMaterialUncheckedCreateWithoutCourseInput = {
	id?: string;
	title: string;
	type: string;
	content?: string | null;
	fileUrl?: string | null;
	order?: number;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type CourseMaterialCreateOrConnectWithoutCourseInput = {
	where: Prisma.CourseMaterialWhereUniqueInput;
	create: Prisma.XOR<
		Prisma.CourseMaterialCreateWithoutCourseInput,
		Prisma.CourseMaterialUncheckedCreateWithoutCourseInput
	>;
};

export type CourseMaterialCreateManyCourseInputEnvelope = {
	data:
		| Prisma.CourseMaterialCreateManyCourseInput
		| Prisma.CourseMaterialCreateManyCourseInput[];
};

export type CourseMaterialUpsertWithWhereUniqueWithoutCourseInput = {
	where: Prisma.CourseMaterialWhereUniqueInput;
	update: Prisma.XOR<
		Prisma.CourseMaterialUpdateWithoutCourseInput,
		Prisma.CourseMaterialUncheckedUpdateWithoutCourseInput
	>;
	create: Prisma.XOR<
		Prisma.CourseMaterialCreateWithoutCourseInput,
		Prisma.CourseMaterialUncheckedCreateWithoutCourseInput
	>;
};

export type CourseMaterialUpdateWithWhereUniqueWithoutCourseInput = {
	where: Prisma.CourseMaterialWhereUniqueInput;
	data: Prisma.XOR<
		Prisma.CourseMaterialUpdateWithoutCourseInput,
		Prisma.CourseMaterialUncheckedUpdateWithoutCourseInput
	>;
};

export type CourseMaterialUpdateManyWithWhereWithoutCourseInput = {
	where: Prisma.CourseMaterialScalarWhereInput;
	data: Prisma.XOR<
		Prisma.CourseMaterialUpdateManyMutationInput,
		Prisma.CourseMaterialUncheckedUpdateManyWithoutCourseInput
	>;
};

export type CourseMaterialScalarWhereInput = {
	AND?:
		| Prisma.CourseMaterialScalarWhereInput
		| Prisma.CourseMaterialScalarWhereInput[];
	OR?: Prisma.CourseMaterialScalarWhereInput[];
	NOT?:
		| Prisma.CourseMaterialScalarWhereInput
		| Prisma.CourseMaterialScalarWhereInput[];
	id?: Prisma.StringFilter<"CourseMaterial"> | string;
	title?: Prisma.StringFilter<"CourseMaterial"> | string;
	type?: Prisma.StringFilter<"CourseMaterial"> | string;
	content?: Prisma.StringNullableFilter<"CourseMaterial"> | string | null;
	fileUrl?: Prisma.StringNullableFilter<"CourseMaterial"> | string | null;
	order?: Prisma.IntFilter<"CourseMaterial"> | number;
	courseId?: Prisma.StringFilter<"CourseMaterial"> | string;
	createdAt?: Prisma.DateTimeFilter<"CourseMaterial"> | Date | string;
	updatedAt?: Prisma.DateTimeFilter<"CourseMaterial"> | Date | string;
};

export type CourseMaterialCreateManyCourseInput = {
	id?: string;
	title: string;
	type: string;
	content?: string | null;
	fileUrl?: string | null;
	order?: number;
	createdAt?: Date | string;
	updatedAt?: Date | string;
};

export type CourseMaterialUpdateWithoutCourseInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	type?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	fileUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	order?: Prisma.IntFieldUpdateOperationsInput | number;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CourseMaterialUncheckedUpdateWithoutCourseInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	type?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	fileUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	order?: Prisma.IntFieldUpdateOperationsInput | number;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CourseMaterialUncheckedUpdateManyWithoutCourseInput = {
	title?: Prisma.StringFieldUpdateOperationsInput | string;
	type?: Prisma.StringFieldUpdateOperationsInput | string;
	content?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	fileUrl?: Prisma.NullableStringFieldUpdateOperationsInput | string | null;
	order?: Prisma.IntFieldUpdateOperationsInput | number;
	createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
	updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string;
};

export type CourseMaterialSelect<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetSelect<
	{
		id?: boolean;
		title?: boolean;
		type?: boolean;
		content?: boolean;
		fileUrl?: boolean;
		order?: boolean;
		courseId?: boolean;
		createdAt?: boolean;
		updatedAt?: boolean;
		course?: boolean | Prisma.CourseDefaultArgs<ExtArgs>;
	},
	ExtArgs["result"]["courseMaterial"]
>;

export type CourseMaterialSelectScalar = {
	id?: boolean;
	title?: boolean;
	type?: boolean;
	content?: boolean;
	fileUrl?: boolean;
	order?: boolean;
	courseId?: boolean;
	createdAt?: boolean;
	updatedAt?: boolean;
};

export type CourseMaterialOmit<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = runtime.Types.Extensions.GetOmit<
	| "id"
	| "title"
	| "type"
	| "content"
	| "fileUrl"
	| "order"
	| "courseId"
	| "createdAt"
	| "updatedAt",
	ExtArgs["result"]["courseMaterial"]
>;
export type CourseMaterialInclude<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	course?: boolean | Prisma.CourseDefaultArgs<ExtArgs>;
};

export type $CourseMaterialPayload<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	name: "CourseMaterial";
	objects: {
		course: Prisma.$CoursePayload<ExtArgs>;
	};
	scalars: runtime.Types.Extensions.GetPayloadResult<
		{
			id: string;
			title: string;
			type: string;
			content: string | null;
			fileUrl: string | null;
			order: number;
			courseId: string;
			createdAt: Date;
			updatedAt: Date;
		},
		ExtArgs["result"]["courseMaterial"]
	>;
	composites: {};
};

export type CourseMaterialGetPayload<
	S extends boolean | null | undefined | CourseMaterialDefaultArgs,
> = runtime.Types.Result.GetResult<Prisma.$CourseMaterialPayload, S>;

export type CourseMaterialCountArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = Omit<
	CourseMaterialFindManyArgs,
	"select" | "include" | "distinct" | "omit"
> & {
	select?: CourseMaterialCountAggregateInputType | true;
};

export interface CourseMaterialDelegate<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> {
	[K: symbol]: {
		types: Prisma.TypeMap<ExtArgs>["model"]["CourseMaterial"];
		meta: { name: "CourseMaterial" };
	};
	/**
	 * Find zero or one CourseMaterial that matches the filter.
	 * @param {CourseMaterialFindUniqueArgs} args - Arguments to find a CourseMaterial
	 * @example
	 * // Get one CourseMaterial
	 * const courseMaterial = await prisma.courseMaterial.findUnique({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUnique<T extends CourseMaterialFindUniqueArgs>(
		args: Prisma.SelectSubset<T, CourseMaterialFindUniqueArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"findUnique",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find one CourseMaterial that matches the filter or throw an error with `error.code='P2025'`
	 * if no matches were found.
	 * @param {CourseMaterialFindUniqueOrThrowArgs} args - Arguments to find a CourseMaterial
	 * @example
	 * // Get one CourseMaterial
	 * const courseMaterial = await prisma.courseMaterial.findUniqueOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findUniqueOrThrow<T extends CourseMaterialFindUniqueOrThrowArgs>(
		args: Prisma.SelectSubset<T, CourseMaterialFindUniqueOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"findUniqueOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first CourseMaterial that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {CourseMaterialFindFirstArgs} args - Arguments to find a CourseMaterial
	 * @example
	 * // Get one CourseMaterial
	 * const courseMaterial = await prisma.courseMaterial.findFirst({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirst<T extends CourseMaterialFindFirstArgs>(
		args?: Prisma.SelectSubset<T, CourseMaterialFindFirstArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"findFirst",
			GlobalOmitOptions
		> | null,
		null,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find the first CourseMaterial that matches the filter or
	 * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {CourseMaterialFindFirstOrThrowArgs} args - Arguments to find a CourseMaterial
	 * @example
	 * // Get one CourseMaterial
	 * const courseMaterial = await prisma.courseMaterial.findFirstOrThrow({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 */
	findFirstOrThrow<T extends CourseMaterialFindFirstOrThrowArgs>(
		args?: Prisma.SelectSubset<T, CourseMaterialFindFirstOrThrowArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"findFirstOrThrow",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more CourseMaterials that matches the filter.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {CourseMaterialFindManyArgs} args - Arguments to filter and select certain fields only.
	 * @example
	 * // Get all CourseMaterials
	 * const courseMaterials = await prisma.courseMaterial.findMany()
	 *
	 * // Get first 10 CourseMaterials
	 * const courseMaterials = await prisma.courseMaterial.findMany({ take: 10 })
	 *
	 * // Only select the `id`
	 * const courseMaterialWithIdOnly = await prisma.courseMaterial.findMany({ select: { id: true } })
	 *
	 */
	findMany<T extends CourseMaterialFindManyArgs>(
		args?: Prisma.SelectSubset<T, CourseMaterialFindManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"findMany",
			GlobalOmitOptions
		>
	>;

	/**
	 * Create a CourseMaterial.
	 * @param {CourseMaterialCreateArgs} args - Arguments to create a CourseMaterial.
	 * @example
	 * // Create one CourseMaterial
	 * const CourseMaterial = await prisma.courseMaterial.create({
	 *   data: {
	 *     // ... data to create a CourseMaterial
	 *   }
	 * })
	 *
	 */
	create<T extends CourseMaterialCreateArgs>(
		args: Prisma.SelectSubset<T, CourseMaterialCreateArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"create",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Create many CourseMaterials.
	 * @param {CourseMaterialCreateManyArgs} args - Arguments to create many CourseMaterials.
	 * @example
	 * // Create many CourseMaterials
	 * const courseMaterial = await prisma.courseMaterial.createMany({
	 *   data: [
	 *     // ... provide data here
	 *   ]
	 * })
	 *
	 */
	createMany<T extends CourseMaterialCreateManyArgs>(
		args?: Prisma.SelectSubset<T, CourseMaterialCreateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Delete a CourseMaterial.
	 * @param {CourseMaterialDeleteArgs} args - Arguments to delete one CourseMaterial.
	 * @example
	 * // Delete one CourseMaterial
	 * const CourseMaterial = await prisma.courseMaterial.delete({
	 *   where: {
	 *     // ... filter to delete one CourseMaterial
	 *   }
	 * })
	 *
	 */
	delete<T extends CourseMaterialDeleteArgs>(
		args: Prisma.SelectSubset<T, CourseMaterialDeleteArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"delete",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Update one CourseMaterial.
	 * @param {CourseMaterialUpdateArgs} args - Arguments to update one CourseMaterial.
	 * @example
	 * // Update one CourseMaterial
	 * const courseMaterial = await prisma.courseMaterial.update({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	update<T extends CourseMaterialUpdateArgs>(
		args: Prisma.SelectSubset<T, CourseMaterialUpdateArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"update",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Delete zero or more CourseMaterials.
	 * @param {CourseMaterialDeleteManyArgs} args - Arguments to filter CourseMaterials to delete.
	 * @example
	 * // Delete a few CourseMaterials
	 * const { count } = await prisma.courseMaterial.deleteMany({
	 *   where: {
	 *     // ... provide filter here
	 *   }
	 * })
	 *
	 */
	deleteMany<T extends CourseMaterialDeleteManyArgs>(
		args?: Prisma.SelectSubset<T, CourseMaterialDeleteManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Update zero or more CourseMaterials.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {CourseMaterialUpdateManyArgs} args - Arguments to update one or more rows.
	 * @example
	 * // Update many CourseMaterials
	 * const courseMaterial = await prisma.courseMaterial.updateMany({
	 *   where: {
	 *     // ... provide filter here
	 *   },
	 *   data: {
	 *     // ... provide data here
	 *   }
	 * })
	 *
	 */
	updateMany<T extends CourseMaterialUpdateManyArgs>(
		args: Prisma.SelectSubset<T, CourseMaterialUpdateManyArgs<ExtArgs>>,
	): Prisma.PrismaPromise<Prisma.BatchPayload>;

	/**
	 * Create or update one CourseMaterial.
	 * @param {CourseMaterialUpsertArgs} args - Arguments to update or create a CourseMaterial.
	 * @example
	 * // Update or create a CourseMaterial
	 * const courseMaterial = await prisma.courseMaterial.upsert({
	 *   create: {
	 *     // ... data to create a CourseMaterial
	 *   },
	 *   update: {
	 *     // ... in case it already exists, update
	 *   },
	 *   where: {
	 *     // ... the filter for the CourseMaterial we want to update
	 *   }
	 * })
	 */
	upsert<T extends CourseMaterialUpsertArgs>(
		args: Prisma.SelectSubset<T, CourseMaterialUpsertArgs<ExtArgs>>,
	): Prisma.Prisma__CourseMaterialClient<
		runtime.Types.Result.GetResult<
			Prisma.$CourseMaterialPayload<ExtArgs>,
			T,
			"upsert",
			GlobalOmitOptions
		>,
		never,
		ExtArgs,
		GlobalOmitOptions
	>;

	/**
	 * Find zero or more CourseMaterials that matches the filter.
	 * @param {CourseMaterialFindRawArgs} args - Select which filters you would like to apply.
	 * @example
	 * const courseMaterial = await prisma.courseMaterial.findRaw({
	 *   filter: { age: { $gt: 25 } }
	 * })
	 */
	findRaw(
		args?: Prisma.CourseMaterialFindRawArgs,
	): Prisma.PrismaPromise<Prisma.JsonObject>;

	/**
	 * Perform aggregation operations on a CourseMaterial.
	 * @param {CourseMaterialAggregateRawArgs} args - Select which aggregations you would like to apply.
	 * @example
	 * const courseMaterial = await prisma.courseMaterial.aggregateRaw({
	 *   pipeline: [
	 *     { $match: { status: "registered" } },
	 *     { $group: { _id: "$country", total: { $sum: 1 } } }
	 *   ]
	 * })
	 */
	aggregateRaw(
		args?: Prisma.CourseMaterialAggregateRawArgs,
	): Prisma.PrismaPromise<Prisma.JsonObject>;

	/**
	 * Count the number of CourseMaterials.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {CourseMaterialCountArgs} args - Arguments to filter CourseMaterials to count.
	 * @example
	 * // Count the number of CourseMaterials
	 * const count = await prisma.courseMaterial.count({
	 *   where: {
	 *     // ... the filter for the CourseMaterials we want to count
	 *   }
	 * })
	 **/
	count<T extends CourseMaterialCountArgs>(
		args?: Prisma.Subset<T, CourseMaterialCountArgs>,
	): Prisma.PrismaPromise<
		T extends runtime.Types.Utils.Record<"select", any>
			? T["select"] extends true
				? number
				: Prisma.GetScalarType<
						T["select"],
						CourseMaterialCountAggregateOutputType
					>
			: number
	>;

	/**
	 * Allows you to perform aggregations operations on a CourseMaterial.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {CourseMaterialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
	 * @example
	 * // Ordered by age ascending
	 * // Where email contains prisma.io
	 * // Limited to the 10 users
	 * const aggregations = await prisma.user.aggregate({
	 *   _avg: {
	 *     age: true,
	 *   },
	 *   where: {
	 *     email: {
	 *       contains: "prisma.io",
	 *     },
	 *   },
	 *   orderBy: {
	 *     age: "asc",
	 *   },
	 *   take: 10,
	 * })
	 **/
	aggregate<T extends CourseMaterialAggregateArgs>(
		args: Prisma.Subset<T, CourseMaterialAggregateArgs>,
	): Prisma.PrismaPromise<GetCourseMaterialAggregateType<T>>;

	/**
	 * Group by CourseMaterial.
	 * Note, that providing `undefined` is treated as the value not being there.
	 * Read more here: https://pris.ly/d/null-undefined
	 * @param {CourseMaterialGroupByArgs} args - Group by arguments.
	 * @example
	 * // Group by city, order by createdAt, get count
	 * const result = await prisma.user.groupBy({
	 *   by: ['city', 'createdAt'],
	 *   orderBy: {
	 *     createdAt: true
	 *   },
	 *   _count: {
	 *     _all: true
	 *   },
	 * })
	 *
	 **/
	groupBy<
		T extends CourseMaterialGroupByArgs,
		HasSelectOrTake extends Prisma.Or<
			Prisma.Extends<"skip", Prisma.Keys<T>>,
			Prisma.Extends<"take", Prisma.Keys<T>>
		>,
		OrderByArg extends Prisma.True extends HasSelectOrTake
			? { orderBy: CourseMaterialGroupByArgs["orderBy"] }
			: { orderBy?: CourseMaterialGroupByArgs["orderBy"] },
		OrderFields extends Prisma.ExcludeUnderscoreKeys<
			Prisma.Keys<Prisma.MaybeTupleToUnion<T["orderBy"]>>
		>,
		ByFields extends Prisma.MaybeTupleToUnion<T["by"]>,
		ByValid extends Prisma.Has<ByFields, OrderFields>,
		HavingFields extends Prisma.GetHavingFields<T["having"]>,
		HavingValid extends Prisma.Has<ByFields, HavingFields>,
		ByEmpty extends T["by"] extends never[] ? Prisma.True : Prisma.False,
		InputErrors extends ByEmpty extends Prisma.True
			? `Error: "by" must not be empty.`
			: HavingValid extends Prisma.False
				? {
						[P in HavingFields]: P extends ByFields
							? never
							: P extends string
								? `Error: Field "${P}" used in "having" needs to be provided in "by".`
								: [
										Error,
										"Field ",
										P,
										` in "having" needs to be provided in "by"`,
									];
					}[HavingFields]
				: "take" extends Prisma.Keys<T>
					? "orderBy" extends Prisma.Keys<T>
						? ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields]
						: 'Error: If you provide "take", you also need to provide "orderBy"'
					: "skip" extends Prisma.Keys<T>
						? "orderBy" extends Prisma.Keys<T>
							? ByValid extends Prisma.True
								? {}
								: {
										[P in OrderFields]: P extends ByFields
											? never
											: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
									}[OrderFields]
							: 'Error: If you provide "skip", you also need to provide "orderBy"'
						: ByValid extends Prisma.True
							? {}
							: {
									[P in OrderFields]: P extends ByFields
										? never
										: `Error: Field "${P}" in "orderBy" needs to be provided in "by"`;
								}[OrderFields],
	>(
		args: Prisma.SubsetIntersection<T, CourseMaterialGroupByArgs, OrderByArg> &
			InputErrors,
	): {} extends InputErrors
		? GetCourseMaterialGroupByPayload<T>
		: Prisma.PrismaPromise<InputErrors>;
	/**
	 * Fields of the CourseMaterial model
	 */
	readonly fields: CourseMaterialFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for CourseMaterial.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CourseMaterialClient<
	T,
	Null = never,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
	GlobalOmitOptions = {},
> extends Prisma.PrismaPromise<T> {
	readonly [Symbol.toStringTag]: "PrismaPromise";
	course<T extends Prisma.CourseDefaultArgs<ExtArgs> = {}>(
		args?: Prisma.Subset<T, Prisma.CourseDefaultArgs<ExtArgs>>,
	): Prisma.Prisma__CourseClient<
		| runtime.Types.Result.GetResult<
				Prisma.$CoursePayload<ExtArgs>,
				T,
				"findUniqueOrThrow",
				GlobalOmitOptions
		  >
		| Null,
		Null,
		ExtArgs,
		GlobalOmitOptions
	>;
	/**
	 * Attaches callbacks for the resolution and/or rejection of the Promise.
	 * @param onfulfilled The callback to execute when the Promise is resolved.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of which ever callback is executed.
	 */
	then<TResult1 = T, TResult2 = never>(
		onfulfilled?:
			| ((value: T) => TResult1 | PromiseLike<TResult1>)
			| undefined
			| null,
		onrejected?:
			| ((reason: any) => TResult2 | PromiseLike<TResult2>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<TResult1 | TResult2>;
	/**
	 * Attaches a callback for only the rejection of the Promise.
	 * @param onrejected The callback to execute when the Promise is rejected.
	 * @returns A Promise for the completion of the callback.
	 */
	catch<TResult = never>(
		onrejected?:
			| ((reason: any) => TResult | PromiseLike<TResult>)
			| undefined
			| null,
	): runtime.Types.Utils.JsPromise<T | TResult>;
	/**
	 * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
	 * resolved value cannot be modified from the callback.
	 * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
	 * @returns A Promise for the completion of the callback.
	 */
	finally(
		onfinally?: (() => void) | undefined | null,
	): runtime.Types.Utils.JsPromise<T>;
}

/**
 * Fields of the CourseMaterial model
 */
export interface CourseMaterialFieldRefs {
	readonly id: Prisma.FieldRef<"CourseMaterial", "String">;
	readonly title: Prisma.FieldRef<"CourseMaterial", "String">;
	readonly type: Prisma.FieldRef<"CourseMaterial", "String">;
	readonly content: Prisma.FieldRef<"CourseMaterial", "String">;
	readonly fileUrl: Prisma.FieldRef<"CourseMaterial", "String">;
	readonly order: Prisma.FieldRef<"CourseMaterial", "Int">;
	readonly courseId: Prisma.FieldRef<"CourseMaterial", "String">;
	readonly createdAt: Prisma.FieldRef<"CourseMaterial", "DateTime">;
	readonly updatedAt: Prisma.FieldRef<"CourseMaterial", "DateTime">;
}

// Custom InputTypes
/**
 * CourseMaterial findUnique
 */
export type CourseMaterialFindUniqueArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * Filter, which CourseMaterial to fetch.
	 */
	where: Prisma.CourseMaterialWhereUniqueInput;
};

/**
 * CourseMaterial findUniqueOrThrow
 */
export type CourseMaterialFindUniqueOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * Filter, which CourseMaterial to fetch.
	 */
	where: Prisma.CourseMaterialWhereUniqueInput;
};

/**
 * CourseMaterial findFirst
 */
export type CourseMaterialFindFirstArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * Filter, which CourseMaterial to fetch.
	 */
	where?: Prisma.CourseMaterialWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of CourseMaterials to fetch.
	 */
	orderBy?:
		| Prisma.CourseMaterialOrderByWithRelationInput
		| Prisma.CourseMaterialOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for CourseMaterials.
	 */
	cursor?: Prisma.CourseMaterialWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` CourseMaterials from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` CourseMaterials.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of CourseMaterials.
	 */
	distinct?:
		| Prisma.CourseMaterialScalarFieldEnum
		| Prisma.CourseMaterialScalarFieldEnum[];
};

/**
 * CourseMaterial findFirstOrThrow
 */
export type CourseMaterialFindFirstOrThrowArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * Filter, which CourseMaterial to fetch.
	 */
	where?: Prisma.CourseMaterialWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of CourseMaterials to fetch.
	 */
	orderBy?:
		| Prisma.CourseMaterialOrderByWithRelationInput
		| Prisma.CourseMaterialOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for searching for CourseMaterials.
	 */
	cursor?: Prisma.CourseMaterialWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` CourseMaterials from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` CourseMaterials.
	 */
	skip?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
	 *
	 * Filter by unique combinations of CourseMaterials.
	 */
	distinct?:
		| Prisma.CourseMaterialScalarFieldEnum
		| Prisma.CourseMaterialScalarFieldEnum[];
};

/**
 * CourseMaterial findMany
 */
export type CourseMaterialFindManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * Filter, which CourseMaterials to fetch.
	 */
	where?: Prisma.CourseMaterialWhereInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
	 *
	 * Determine the order of CourseMaterials to fetch.
	 */
	orderBy?:
		| Prisma.CourseMaterialOrderByWithRelationInput
		| Prisma.CourseMaterialOrderByWithRelationInput[];
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
	 *
	 * Sets the position for listing CourseMaterials.
	 */
	cursor?: Prisma.CourseMaterialWhereUniqueInput;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Take `Â±n` CourseMaterials from the position of the cursor.
	 */
	take?: number;
	/**
	 * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
	 *
	 * Skip the first `n` CourseMaterials.
	 */
	skip?: number;
	distinct?:
		| Prisma.CourseMaterialScalarFieldEnum
		| Prisma.CourseMaterialScalarFieldEnum[];
};

/**
 * CourseMaterial create
 */
export type CourseMaterialCreateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * The data needed to create a CourseMaterial.
	 */
	data: Prisma.XOR<
		Prisma.CourseMaterialCreateInput,
		Prisma.CourseMaterialUncheckedCreateInput
	>;
};

/**
 * CourseMaterial createMany
 */
export type CourseMaterialCreateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to create many CourseMaterials.
	 */
	data:
		| Prisma.CourseMaterialCreateManyInput
		| Prisma.CourseMaterialCreateManyInput[];
};

/**
 * CourseMaterial update
 */
export type CourseMaterialUpdateArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * The data needed to update a CourseMaterial.
	 */
	data: Prisma.XOR<
		Prisma.CourseMaterialUpdateInput,
		Prisma.CourseMaterialUncheckedUpdateInput
	>;
	/**
	 * Choose, which CourseMaterial to update.
	 */
	where: Prisma.CourseMaterialWhereUniqueInput;
};

/**
 * CourseMaterial updateMany
 */
export type CourseMaterialUpdateManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The data used to update CourseMaterials.
	 */
	data: Prisma.XOR<
		Prisma.CourseMaterialUpdateManyMutationInput,
		Prisma.CourseMaterialUncheckedUpdateManyInput
	>;
	/**
	 * Filter which CourseMaterials to update
	 */
	where?: Prisma.CourseMaterialWhereInput;
	/**
	 * Limit how many CourseMaterials to update.
	 */
	limit?: number;
};

/**
 * CourseMaterial upsert
 */
export type CourseMaterialUpsertArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * The filter to search for the CourseMaterial to update in case it exists.
	 */
	where: Prisma.CourseMaterialWhereUniqueInput;
	/**
	 * In case the CourseMaterial found by the `where` argument doesn't exist, create a new CourseMaterial with this data.
	 */
	create: Prisma.XOR<
		Prisma.CourseMaterialCreateInput,
		Prisma.CourseMaterialUncheckedCreateInput
	>;
	/**
	 * In case the CourseMaterial was found with the provided `where` argument, update it with this data.
	 */
	update: Prisma.XOR<
		Prisma.CourseMaterialUpdateInput,
		Prisma.CourseMaterialUncheckedUpdateInput
	>;
};

/**
 * CourseMaterial delete
 */
export type CourseMaterialDeleteArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
	/**
	 * Filter which CourseMaterial to delete.
	 */
	where: Prisma.CourseMaterialWhereUniqueInput;
};

/**
 * CourseMaterial deleteMany
 */
export type CourseMaterialDeleteManyArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Filter which CourseMaterials to delete
	 */
	where?: Prisma.CourseMaterialWhereInput;
	/**
	 * Limit how many CourseMaterials to delete.
	 */
	limit?: number;
};

/**
 * CourseMaterial findRaw
 */
export type CourseMaterialFindRawArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * The query predicate filter. If unspecified, then all documents in the collection will match the predicate. ${@link https://docs.mongodb.com/manual/reference/operator/query MongoDB Docs}.
	 */
	filter?: runtime.InputJsonValue;
	/**
	 * Additional options to pass to the `find` command ${@link https://docs.mongodb.com/manual/reference/command/find/#command-fields MongoDB Docs}.
	 */
	options?: runtime.InputJsonValue;
};

/**
 * CourseMaterial aggregateRaw
 */
export type CourseMaterialAggregateRawArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * An array of aggregation stages to process and transform the document stream via the aggregation pipeline. ${@link https://docs.mongodb.com/manual/reference/operator/aggregation-pipeline MongoDB Docs}.
	 */
	pipeline?: runtime.InputJsonValue[];
	/**
	 * Additional options to pass to the `aggregate` command ${@link https://docs.mongodb.com/manual/reference/command/aggregate/#command-fields MongoDB Docs}.
	 */
	options?: runtime.InputJsonValue;
};

/**
 * CourseMaterial without action
 */
export type CourseMaterialDefaultArgs<
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = {
	/**
	 * Select specific fields to fetch from the CourseMaterial
	 */
	select?: Prisma.CourseMaterialSelect<ExtArgs> | null;
	/**
	 * Omit specific fields from the CourseMaterial
	 */
	omit?: Prisma.CourseMaterialOmit<ExtArgs> | null;
	/**
	 * Choose, which related nodes to fetch as well
	 */
	include?: Prisma.CourseMaterialInclude<ExtArgs> | null;
};
