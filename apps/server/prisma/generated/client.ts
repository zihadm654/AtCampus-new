/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as path from "node:path";
import * as process from "node:process";
import { fileURLToPath } from "node:url";

const __dirname = path.dirname(fileURLToPath(import.meta.url));

import type * as runtime from "@prisma/client/runtime/library";
import * as $Enums from "./enums";
import * as $Class from "./internal/class";
import * as Prisma from "./internal/prismaNamespace";

export * as $Enums from "./enums";
/**
 * ## Prisma Client
 *
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname);
export type PrismaClient<
	ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
	Log = $Class.LogOptions<ClientOptions>,
	ExtArgs extends
		runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs,
> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>;
export { Prisma };

// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node");
path.join(process.cwd(), "prisma/generated/query_engine-windows.dll.node");

/**
 * Model User
 *
 */
export type User = Prisma.UserModel;
/**
 * Model Session
 *
 */
export type Session = Prisma.SessionModel;
/**
 * Model Account
 *
 */
export type Account = Prisma.AccountModel;
/**
 * Model Verification
 *
 */
export type Verification = Prisma.VerificationModel;
/**
 * Model TwoFactor
 *
 */
export type TwoFactor = Prisma.TwoFactorModel;
/**
 * Model ProfileView
 *
 */
export type ProfileView = Prisma.ProfileViewModel;
/**
 * Model Education
 *
 */
export type Education = Prisma.EducationModel;
/**
 * Model Experience
 *
 */
export type Experience = Prisma.ExperienceModel;
/**
 * Model Course
 *
 */
export type Course = Prisma.CourseModel;
/**
 * Model Enrollment
 *
 */
export type Enrollment = Prisma.EnrollmentModel;
/**
 * Model CourseAnnouncement
 *
 */
export type CourseAnnouncement = Prisma.CourseAnnouncementModel;
/**
 * Model CourseMaterial
 *
 */
export type CourseMaterial = Prisma.CourseMaterialModel;
/**
 * Model SkillEndorsement
 *
 */
export type SkillEndorsement = Prisma.SkillEndorsementModel;
/**
 * Model Skill
 *
 */
export type Skill = Prisma.SkillModel;
/**
 * Model UserSkill
 *
 */
export type UserSkill = Prisma.UserSkillModel;
/**
 * Model Job
 *
 */
export type Job = Prisma.JobModel;
/**
 * Model Company
 *
 */
export type Company = Prisma.CompanyModel;
/**
 * Model Application
 *
 */
export type Application = Prisma.ApplicationModel;
/**
 * Model SaveJob
 *
 */
export type SaveJob = Prisma.SaveJobModel;
/**
 * Model Post
 *
 */
export type Post = Prisma.PostModel;
/**
 * Model Bookmark
 *
 */
export type Bookmark = Prisma.BookmarkModel;
/**
 * Model Media
 *
 */
export type Media = Prisma.MediaModel;
/**
 * Model Comment
 *
 */
export type Comment = Prisma.CommentModel;
/**
 * Model Like
 *
 */
export type Like = Prisma.LikeModel;
/**
 * Model Follow
 *
 */
export type Follow = Prisma.FollowModel;
/**
 * Model Notification
 *
 */
export type Notification = Prisma.NotificationModel;
/**
 * Model Research
 *
 */
export type Research = Prisma.ResearchModel;
/**
 * Model ContentView
 *
 */
export type ContentView = Prisma.ContentViewModel;
/**
 * Model SaveResearch
 *
 */
export type SaveResearch = Prisma.SaveResearchModel;
/**
 * Model Todo
 *
 */
export type Todo = Prisma.TodoModel;

export type UserRole = $Enums.UserRole;
export const UserRole = $Enums.UserRole;

export type ApplicationStatus = $Enums.ApplicationStatus;
export const ApplicationStatus = $Enums.ApplicationStatus;

export type MediaType = $Enums.MediaType;
export const MediaType = $Enums.MediaType;

export type NotificationType = $Enums.NotificationType;
export const NotificationType = $Enums.NotificationType;
